#!/usr/bin/env node

const { execSync } = require('child_process');
const fs = require('fs');
const path = require('path');

console.log('üöÄ Starting Netlify build process...\n');

// Check if we're in Netlify environment
const isNetlify = process.env.NETLIFY === 'true';
console.log(`Environment: ${isNetlify ? 'Netlify' : 'Local'}`);

// Verify package.json exists
if (!fs.existsSync('package.json')) {
  console.error('‚ùå Error: package.json not found');
  process.exit(1);
}

// Check if Vite is available
try {
  execSync('npx vite --version', { stdio: 'pipe' });
  console.log('‚úÖ Vite found');
} catch (error) {
  console.log('‚ö†Ô∏è  Vite not found in PATH, trying to install...');
  try {
    execSync('npm install', { stdio: 'inherit' });
    console.log('‚úÖ Dependencies installed');
  } catch (installError) {
    console.error('‚ùå Failed to install dependencies');
    process.exit(1);
  }
}

// Run environment verification if script exists
if (fs.existsSync('scripts/verify-env.js')) {
  try {
    console.log('\nüîç Running environment verification...');
    execSync('node scripts/verify-env.js', { stdio: 'inherit' });
  } catch (error) {
    console.log('‚ö†Ô∏è  Environment verification failed, continuing with build...');
  }
} else {
  console.log('‚ö†Ô∏è  Environment verification script not found, skipping...');
}

// Build the project
console.log('\nüèóÔ∏è  Building project...');
try {
  execSync('npx vite build --mode production', { stdio: 'inherit' });
  console.log('\n‚úÖ Build completed successfully!');
} catch (error) {
  console.error('\n‚ùå Build failed');
  console.error('Error:', error.message);
  process.exit(1);
}

// Verify build output
if (!fs.existsSync('dist/index.html')) {
  console.error('‚ùå Build verification failed: dist/index.html not found');
  process.exit(1);
}

console.log('‚úÖ Build verification passed');
console.log('\nüéâ Netlify build completed successfully!');