{
  "timestamp": "2025-08-31T01:09:55.377Z",
  "summary": {
    "componentsCount": 511,
    "featuresCount": 8,
    "overallScore": 32,
    "totalIssues": 1989
  },
  "details": {
    "components": [
      {
        "file": "components\\admin\\AdminDashboard.tsx",
        "tests": {
          "hasErrorBoundary": true,
          "hasAccessibility": true,
          "hasLoadingStates": true,
          "hasErrorHandling": true,
          "hasMobileSupport": true,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": true
        },
        "issues": [],
        "suggestions": [],
        "score": 89
      },
      {
        "file": "components\\admin\\AdminRoute.tsx",
        "tests": {
          "hasErrorBoundary": true,
          "hasAccessibility": false,
          "hasLoadingStates": true,
          "hasErrorHandling": true,
          "hasMobileSupport": false,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Poor accessibility support",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add ARIA labels and semantic HTML",
          "Add responsive design and touch interactions"
        ],
        "score": 56
      },
      {
        "file": "components\\admin\\PasswordManagementWidget.tsx",
        "tests": {
          "hasErrorBoundary": true,
          "hasAccessibility": false,
          "hasLoadingStates": true,
          "hasErrorHandling": true,
          "hasMobileSupport": true,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Poor accessibility support"
        ],
        "suggestions": [
          "Add ARIA labels and semantic HTML"
        ],
        "score": 56
      },
      {
        "file": "components\\admin\\SecurityDashboard.tsx",
        "tests": {
          "hasErrorBoundary": true,
          "hasAccessibility": false,
          "hasLoadingStates": true,
          "hasErrorHandling": true,
          "hasMobileSupport": true,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Poor accessibility support"
        ],
        "suggestions": [
          "Add ARIA labels and semantic HTML"
        ],
        "score": 56
      },
      {
        "file": "components\\ai\\AIFantasyAssistant.tsx",
        "tests": {
          "hasErrorBoundary": true,
          "hasAccessibility": true,
          "hasLoadingStates": false,
          "hasErrorHandling": true,
          "hasMobileSupport": true,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing loading states"
        ],
        "suggestions": [
          "Add loading indicators for async operations"
        ],
        "score": 67
      },
      {
        "file": "components\\ai\\ConversationalOracle.tsx",
        "tests": {
          "hasErrorBoundary": true,
          "hasAccessibility": false,
          "hasLoadingStates": true,
          "hasErrorHandling": true,
          "hasMobileSupport": false,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Poor accessibility support",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add ARIA labels and semantic HTML",
          "Add responsive design and touch interactions"
        ],
        "score": 56
      },
      {
        "file": "components\\ai\\OraclePanel.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\analytics\\AdvancedAnalyticsDashboard.tsx",
        "tests": {
          "hasErrorBoundary": true,
          "hasAccessibility": false,
          "hasLoadingStates": true,
          "hasErrorHandling": true,
          "hasMobileSupport": true,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": true
        },
        "issues": [
          "Poor accessibility support"
        ],
        "suggestions": [
          "Add ARIA labels and semantic HTML"
        ],
        "score": 67
      },
      {
        "file": "components\\analytics\\AdvancedOracleAnalyticsDashboard.tsx",
        "tests": {
          "hasErrorBoundary": true,
          "hasAccessibility": true,
          "hasLoadingStates": true,
          "hasErrorHandling": true,
          "hasMobileSupport": true,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [],
        "suggestions": [],
        "score": 67
      },
      {
        "file": "components\\analytics\\AnalyticsComponents.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": true,
          "hasErrorHandling": true,
          "hasMobileSupport": false,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add responsive design and touch interactions"
        ],
        "score": 44
      },
      {
        "file": "components\\analytics\\AnalyticsPanel.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 22
      },
      {
        "file": "components\\analytics\\ChampionshipOddsPreview.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": true,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 22
      },
      {
        "file": "components\\analytics\\ChampionshipProbChart.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\analytics\\CompareTray.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": true,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 22
      },
      {
        "file": "components\\analytics\\DraftGradeCard.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": true,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add responsive design and touch interactions"
        ],
        "score": 22
      },
      {
        "file": "components\\analytics\\DraftRecap.tsx",
        "tests": {
          "hasErrorBoundary": true,
          "hasAccessibility": false,
          "hasLoadingStates": true,
          "hasErrorHandling": true,
          "hasMobileSupport": true,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Poor accessibility support"
        ],
        "suggestions": [
          "Add ARIA labels and semantic HTML"
        ],
        "score": 56
      },
      {
        "file": "components\\analytics\\EnhancedAnalyticsDashboard.tsx",
        "tests": {
          "hasErrorBoundary": true,
          "hasAccessibility": false,
          "hasLoadingStates": true,
          "hasErrorHandling": true,
          "hasMobileSupport": true,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Poor accessibility support"
        ],
        "suggestions": [
          "Add ARIA labels and semantic HTML"
        ],
        "score": 67
      },
      {
        "file": "components\\analytics\\MLAnalyticsDashboard.tsx",
        "tests": {
          "hasErrorBoundary": true,
          "hasAccessibility": false,
          "hasLoadingStates": true,
          "hasErrorHandling": true,
          "hasMobileSupport": true,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Poor accessibility support"
        ],
        "suggestions": [
          "Add ARIA labels and semantic HTML"
        ],
        "score": 56
      },
      {
        "file": "components\\analytics\\MyTeamCompositionChart.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": true
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 22
      },
      {
        "file": "components\\analytics\\OracleAnalyticsDashboard.tsx",
        "tests": {
          "hasErrorBoundary": true,
          "hasAccessibility": true,
          "hasLoadingStates": true,
          "hasErrorHandling": true,
          "hasMobileSupport": true,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [],
        "suggestions": [],
        "score": 67
      },
      {
        "file": "components\\analytics\\PickTimeAnalytics.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": true,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": true
        },
        "issues": [
          "Missing error boundary",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 33
      },
      {
        "file": "components\\analytics\\PlayerCompareTool.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": true,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations"
        ],
        "score": 33
      },
      {
        "file": "components\\analytics\\PositionalScarcityChart.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": true
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 22
      },
      {
        "file": "components\\analytics\\RealTimeAnalyticsDashboard.tsx",
        "tests": {
          "hasErrorBoundary": true,
          "hasAccessibility": false,
          "hasLoadingStates": true,
          "hasErrorHandling": true,
          "hasMobileSupport": true,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": true
        },
        "issues": [
          "Poor accessibility support"
        ],
        "suggestions": [
          "Add ARIA labels and semantic HTML"
        ],
        "score": 78
      },
      {
        "file": "components\\analytics\\TeamNeedsAnalysis.tsx",
        "tests": {
          "hasErrorBoundary": true,
          "hasAccessibility": true,
          "hasLoadingStates": true,
          "hasErrorHandling": true,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Limited mobile support"
        ],
        "suggestions": [
          "Add responsive design and touch interactions"
        ],
        "score": 56
      },
      {
        "file": "components\\AssistantSidekick.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\AstralDraftApp.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\auth\\EnhancedAuthView.tsx",
        "tests": {
          "hasErrorBoundary": true,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": true,
          "hasMobileSupport": true,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Poor accessibility support",
          "Missing loading states"
        ],
        "suggestions": [
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations"
        ],
        "score": 56
      },
      {
        "file": "components\\auth\\MFASetup.tsx",
        "tests": {
          "hasErrorBoundary": true,
          "hasAccessibility": true,
          "hasLoadingStates": true,
          "hasErrorHandling": true,
          "hasMobileSupport": false,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Limited mobile support"
        ],
        "suggestions": [
          "Add responsive design and touch interactions"
        ],
        "score": 67
      },
      {
        "file": "components\\auth\\oauth\\OAuthLoginComponent.tsx",
        "tests": {
          "hasErrorBoundary": true,
          "hasAccessibility": false,
          "hasLoadingStates": true,
          "hasErrorHandling": true,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Poor accessibility support",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add ARIA labels and semantic HTML",
          "Add responsive design and touch interactions"
        ],
        "score": 44
      },
      {
        "file": "components\\auth\\ProductionLoginInterface.tsx",
        "tests": {
          "hasErrorBoundary": true,
          "hasAccessibility": false,
          "hasLoadingStates": true,
          "hasErrorHandling": true,
          "hasMobileSupport": false,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Poor accessibility support",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add ARIA labels and semantic HTML",
          "Add responsive design and touch interactions"
        ],
        "score": 56
      },
      {
        "file": "components\\auth\\ProtectedRoute.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": true,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 22
      },
      {
        "file": "components\\auth\\SecureInputDemo.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": true,
          "hasMobileSupport": true,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations"
        ],
        "score": 44
      },
      {
        "file": "components\\auth\\SimpleLoginInterface.tsx",
        "tests": {
          "hasErrorBoundary": true,
          "hasAccessibility": false,
          "hasLoadingStates": true,
          "hasErrorHandling": true,
          "hasMobileSupport": true,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Poor accessibility support"
        ],
        "suggestions": [
          "Add ARIA labels and semantic HTML"
        ],
        "score": 67
      },
      {
        "file": "components\\auth\\SimplePlayerLogin.tsx",
        "tests": {
          "hasErrorBoundary": true,
          "hasAccessibility": false,
          "hasLoadingStates": true,
          "hasErrorHandling": true,
          "hasMobileSupport": true,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Poor accessibility support"
        ],
        "suggestions": [
          "Add ARIA labels and semantic HTML"
        ],
        "score": 67
      },
      {
        "file": "components\\auth\\UserSettings.tsx",
        "tests": {
          "hasErrorBoundary": true,
          "hasAccessibility": true,
          "hasLoadingStates": true,
          "hasErrorHandling": true,
          "hasMobileSupport": true,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [],
        "suggestions": [],
        "score": 78
      },
      {
        "file": "components\\cache\\CacheIntegrationDemo.tsx",
        "tests": {
          "hasErrorBoundary": true,
          "hasAccessibility": true,
          "hasLoadingStates": true,
          "hasErrorHandling": true,
          "hasMobileSupport": true,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [],
        "suggestions": [],
        "score": 67
      },
      {
        "file": "components\\cache\\CacheManagementDashboard.tsx",
        "tests": {
          "hasErrorBoundary": true,
          "hasAccessibility": true,
          "hasLoadingStates": false,
          "hasErrorHandling": true,
          "hasMobileSupport": true,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing loading states"
        ],
        "suggestions": [
          "Add loading indicators for async operations"
        ],
        "score": 56
      },
      {
        "file": "components\\chat\\ChatPanel.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 22
      },
      {
        "file": "components\\chat\\ReactionPicker.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": true,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations"
        ],
        "score": 22
      },
      {
        "file": "components\\chat\\TradeEventMessage.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\commissioner\\AddPlayerModal.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": true,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": true,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Missing loading states"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add loading indicators for async operations"
        ],
        "score": 44
      },
      {
        "file": "components\\commissioner\\CommissionerTools.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": true,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations"
        ],
        "score": 33
      },
      {
        "file": "components\\commissioner\\CreatePollModal.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": true,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": true,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Missing loading states"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add loading indicators for async operations"
        ],
        "score": 33
      },
      {
        "file": "components\\commissioner\\EnhancedMemberManagement.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": true,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": true,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Missing loading states"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add loading indicators for async operations"
        ],
        "score": 33
      },
      {
        "file": "components\\commissioner\\InviteMemberModal.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": true,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add responsive design and touch interactions"
        ],
        "score": 22
      },
      {
        "file": "components\\commissioner\\LeagueManagementInterface.tsx",
        "tests": {
          "hasErrorBoundary": true,
          "hasAccessibility": true,
          "hasLoadingStates": true,
          "hasErrorHandling": true,
          "hasMobileSupport": true,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [],
        "suggestions": [],
        "score": 67
      },
      {
        "file": "components\\commissioner\\LeagueSettingsEditor.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": true,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations"
        ],
        "score": 22
      },
      {
        "file": "components\\commissioner\\ManageTradesModal.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": true,
          "hasLoadingStates": true,
          "hasErrorHandling": false,
          "hasMobileSupport": true,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary"
        ],
        "suggestions": [
          "Add error boundary wrapper"
        ],
        "score": 44
      },
      {
        "file": "components\\commissioner\\MemberManagementWidget.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": true,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 22
      },
      {
        "file": "components\\commissioner\\PostAnnouncementModal.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\commissioner\\SeasonManagement.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": true,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": true,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Missing loading states"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add loading indicators for async operations"
        ],
        "score": 44
      },
      {
        "file": "components\\communication\\DirectMessaging.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": true,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": true
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations"
        ],
        "score": 44
      },
      {
        "file": "components\\communication\\TradeDiscussion.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": true,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": true
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations"
        ],
        "score": 44
      },
      {
        "file": "components\\communication\\TrashTalkBoard.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": true,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": true
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations"
        ],
        "score": 33
      },
      {
        "file": "components\\comparison\\MatchupTrendChart.tsx",
        "tests": {
          "hasErrorBoundary": true,
          "hasAccessibility": false,
          "hasLoadingStates": true,
          "hasErrorHandling": true,
          "hasMobileSupport": true,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Poor accessibility support"
        ],
        "suggestions": [
          "Add ARIA labels and semantic HTML"
        ],
        "score": 56
      },
      {
        "file": "components\\comparison\\MatchupTrendChartFixed.tsx",
        "tests": {
          "hasErrorBoundary": true,
          "hasAccessibility": false,
          "hasLoadingStates": true,
          "hasErrorHandling": true,
          "hasMobileSupport": true,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Poor accessibility support"
        ],
        "suggestions": [
          "Add ARIA labels and semantic HTML"
        ],
        "score": 56
      },
      {
        "file": "components\\comparison\\PlayerComparisonTool.tsx",
        "tests": {
          "hasErrorBoundary": true,
          "hasAccessibility": false,
          "hasLoadingStates": true,
          "hasErrorHandling": true,
          "hasMobileSupport": true,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": true
        },
        "issues": [
          "Poor accessibility support"
        ],
        "suggestions": [
          "Add ARIA labels and semantic HTML"
        ],
        "score": 78
      },
      {
        "file": "components\\comparison\\TeamComparisonCard.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": true,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 22
      },
      {
        "file": "components\\controls\\ProControls.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\core\\Breadcrumbs.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\core\\CommandPalette.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 22
      },
      {
        "file": "components\\core\\CreateLeagueModal.tsx",
        "tests": {
          "hasErrorBoundary": true,
          "hasAccessibility": true,
          "hasLoadingStates": false,
          "hasErrorHandling": true,
          "hasMobileSupport": true,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing loading states"
        ],
        "suggestions": [
          "Add loading indicators for async operations"
        ],
        "score": 67
      },
      {
        "file": "components\\core\\EditProfileModal.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": true,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations"
        ],
        "score": 33
      },
      {
        "file": "components\\core\\EnhancedCreateLeagueModal.tsx",
        "tests": {
          "hasErrorBoundary": true,
          "hasAccessibility": true,
          "hasLoadingStates": false,
          "hasErrorHandling": true,
          "hasMobileSupport": true,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing loading states"
        ],
        "suggestions": [
          "Add loading indicators for async operations"
        ],
        "score": 67
      },
      {
        "file": "components\\core\\ErrorBoundary.tsx",
        "tests": {
          "hasErrorBoundary": true,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": true,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 33
      },
      {
        "file": "components\\core\\ErrorDisplay.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": true,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 22
      },
      {
        "file": "components\\core\\Header.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": true,
          "hasLoadingStates": true,
          "hasErrorHandling": false,
          "hasMobileSupport": true,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary"
        ],
        "suggestions": [
          "Add error boundary wrapper"
        ],
        "score": 44
      },
      {
        "file": "components\\core\\MobileNavMenu.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 22
      },
      {
        "file": "components\\core\\MockDraftModal.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": true,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": true,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Missing loading states"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add loading indicators for async operations"
        ],
        "score": 33
      },
      {
        "file": "components\\core\\ModernErrorBoundary.tsx",
        "tests": {
          "hasErrorBoundary": true,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": true,
          "hasMobileSupport": true,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Poor accessibility support",
          "Missing loading states"
        ],
        "suggestions": [
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations"
        ],
        "score": 56
      },
      {
        "file": "components\\core\\ModernLoader.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": true,
          "hasErrorHandling": false,
          "hasMobileSupport": true,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML"
        ],
        "score": 33
      },
      {
        "file": "components\\core\\PreferencesModal.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": true,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 22
      },
      {
        "file": "components\\core\\SuspenseLoader.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": true,
          "hasErrorHandling": false,
          "hasMobileSupport": true,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": true
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML"
        ],
        "score": 44
      },
      {
        "file": "components\\core\\VoiceCommandButton.tsx",
        "tests": {
          "hasErrorBoundary": true,
          "hasAccessibility": true,
          "hasLoadingStates": false,
          "hasErrorHandling": true,
          "hasMobileSupport": false,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 56
      },
      {
        "file": "components\\Counter.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\crisis\\CrisisInterventionWidget.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": true,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 33
      },
      {
        "file": "components\\dashboard\\AccessibilityDashboard.tsx",
        "tests": {
          "hasErrorBoundary": true,
          "hasAccessibility": true,
          "hasLoadingStates": true,
          "hasErrorHandling": true,
          "hasMobileSupport": true,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": true
        },
        "issues": [],
        "suggestions": [],
        "score": 78
      },
      {
        "file": "components\\dashboard\\AccessibilityDashboardSimple.tsx",
        "tests": {
          "hasErrorBoundary": true,
          "hasAccessibility": true,
          "hasLoadingStates": true,
          "hasErrorHandling": true,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": true
        },
        "issues": [
          "Limited mobile support"
        ],
        "suggestions": [
          "Add responsive design and touch interactions"
        ],
        "score": 67
      },
      {
        "file": "components\\dashboard\\ActivityFeedWidget.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": true,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 22
      },
      {
        "file": "components\\dashboard\\ChampionshipProbabilityWidget.tsx",
        "tests": {
          "hasErrorBoundary": true,
          "hasAccessibility": false,
          "hasLoadingStates": true,
          "hasErrorHandling": true,
          "hasMobileSupport": false,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": true
        },
        "issues": [
          "Poor accessibility support",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add ARIA labels and semantic HTML",
          "Add responsive design and touch interactions"
        ],
        "score": 67
      },
      {
        "file": "components\\dashboard\\CurrentWeekMatchupsWidget.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": true,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 22
      },
      {
        "file": "components\\dashboard\\CustomizeDashboardModal.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\dashboard\\DataPersistencePanel.tsx",
        "tests": {
          "hasErrorBoundary": true,
          "hasAccessibility": false,
          "hasLoadingStates": true,
          "hasErrorHandling": true,
          "hasMobileSupport": true,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Poor accessibility support"
        ],
        "suggestions": [
          "Add ARIA labels and semantic HTML"
        ],
        "score": 56
      },
      {
        "file": "components\\dashboard\\GameWeekStatusWidget.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": true,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 22
      },
      {
        "file": "components\\dashboard\\LineupOptimizerWidget.tsx",
        "tests": {
          "hasErrorBoundary": true,
          "hasAccessibility": false,
          "hasLoadingStates": true,
          "hasErrorHandling": true,
          "hasMobileSupport": false,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": true
        },
        "issues": [
          "Poor accessibility support",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add ARIA labels and semantic HTML",
          "Add responsive design and touch interactions"
        ],
        "score": 67
      },
      {
        "file": "components\\dashboard\\OnTheHotSeatWidget.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": true,
          "hasLoadingStates": false,
          "hasErrorHandling": true,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 33
      },
      {
        "file": "components\\dashboard\\OracleDashboardContainer.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": true,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": true,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Missing loading states"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add loading indicators for async operations"
        ],
        "score": 33
      },
      {
        "file": "components\\dashboard\\OracleUserDashboard.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": true,
          "hasLoadingStates": true,
          "hasErrorHandling": false,
          "hasMobileSupport": true,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": true
        },
        "issues": [
          "Missing error boundary"
        ],
        "suggestions": [
          "Add error boundary wrapper"
        ],
        "score": 56
      },
      {
        "file": "components\\dashboard\\PerformanceMetricsWidget.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": true,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 22
      },
      {
        "file": "components\\dashboard\\PowerBalanceChart.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": true,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": true
        },
        "issues": [
          "Missing error boundary",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 33
      },
      {
        "file": "components\\dashboard\\TradeOpportunityWidget.tsx",
        "tests": {
          "hasErrorBoundary": true,
          "hasAccessibility": false,
          "hasLoadingStates": true,
          "hasErrorHandling": true,
          "hasMobileSupport": false,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Poor accessibility support",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add ARIA labels and semantic HTML",
          "Add responsive design and touch interactions"
        ],
        "score": 56
      },
      {
        "file": "components\\dashboard\\WaiverWireIntelligenceWidget.tsx",
        "tests": {
          "hasErrorBoundary": true,
          "hasAccessibility": false,
          "hasLoadingStates": true,
          "hasErrorHandling": true,
          "hasMobileSupport": true,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": true
        },
        "issues": [
          "Poor accessibility support"
        ],
        "suggestions": [
          "Add ARIA labels and semantic HTML"
        ],
        "score": 78
      },
      {
        "file": "components\\dashboard\\WhatsNextWidget.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": true,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 33
      },
      {
        "file": "components\\draft\\AiCoPilotPanel.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\draft\\AuctionBlock.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\draft\\AuctionPanel.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\draft\\AutoDraftInterface.tsx",
        "tests": {
          "hasErrorBoundary": true,
          "hasAccessibility": true,
          "hasLoadingStates": false,
          "hasErrorHandling": true,
          "hasMobileSupport": true,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": true
        },
        "issues": [
          "Missing loading states"
        ],
        "suggestions": [
          "Add loading indicators for async operations"
        ],
        "score": 78
      },
      {
        "file": "components\\draft\\DraftBoard.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": true,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations"
        ],
        "score": 22
      },
      {
        "file": "components\\draft\\DraftCompleteOverlay.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 22
      },
      {
        "file": "components\\draft\\DraftOrder.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": true,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations"
        ],
        "score": 22
      },
      {
        "file": "components\\draft\\DraftRoom.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": true,
          "hasMobileSupport": true,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations"
        ],
        "score": 44
      },
      {
        "file": "components\\draft\\DraftSimulationDemo.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": true,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": true,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Missing loading states"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add loading indicators for async operations"
        ],
        "score": 44
      },
      {
        "file": "components\\draft\\DraftSimulationInterface.tsx",
        "tests": {
          "hasErrorBoundary": true,
          "hasAccessibility": true,
          "hasLoadingStates": false,
          "hasErrorHandling": true,
          "hasMobileSupport": true,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": true
        },
        "issues": [
          "Missing loading states"
        ],
        "suggestions": [
          "Add loading indicators for async operations"
        ],
        "score": 78
      },
      {
        "file": "components\\draft\\EnhancedAiDraftCoach.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": true
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 22
      },
      {
        "file": "components\\draft\\EnhancedSnakeDraftRoom.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": true,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 22
      },
      {
        "file": "components\\draft\\GeniusAiChat.tsx",
        "tests": {
          "hasErrorBoundary": true,
          "hasAccessibility": false,
          "hasLoadingStates": true,
          "hasErrorHandling": true,
          "hasMobileSupport": false,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Poor accessibility support",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add ARIA labels and semantic HTML",
          "Add responsive design and touch interactions"
        ],
        "score": 56
      },
      {
        "file": "components\\draft\\LiveDraftLog.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\draft\\LiveDraftRoom.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": true,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations"
        ],
        "score": 22
      },
      {
        "file": "components\\draft\\MyRosterPanel.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": true,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations"
        ],
        "score": 22
      },
      {
        "file": "components\\draft\\TeamColumn.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": true,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations"
        ],
        "score": 22
      },
      {
        "file": "components\\draft\\TurnTimer.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\examples\\GestureExampleComponent.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": true,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations"
        ],
        "score": 33
      },
      {
        "file": "components\\Header.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\help\\HelpSystem.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": true,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": true,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": true
        },
        "issues": [
          "Missing error boundary",
          "Missing loading states"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add loading indicators for async operations"
        ],
        "score": 56
      },
      {
        "file": "components\\history\\ChampionChart.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": true,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": true
        },
        "issues": [
          "Missing error boundary",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 33
      },
      {
        "file": "components\\history\\FinalStandingsTable.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\HistoryPanel.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\hub\\AnnouncementsWidget.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": true,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 22
      },
      {
        "file": "components\\hub\\RivalryWidget.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": true,
          "hasLoadingStates": true,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add responsive design and touch interactions"
        ],
        "score": 33
      },
      {
        "file": "components\\hub\\SideBetsWidget.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": true,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 22
      },
      {
        "file": "components\\hub\\WeeklyPollWidget.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": true,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 22
      },
      {
        "file": "components\\icons\\ABIcon.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\icons\\AdjustmentsIcon.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\icons\\AlertTriangleIcon.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\icons\\ArchiveIcon.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\icons\\ArrowDownIcon.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\icons\\ArrowRightIcon.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\icons\\ArrowRightLeftIcon.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\icons\\ArrowUpIcon.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\icons\\AwardIcon.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\icons\\BarChartIcon.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\icons\\BellIcon.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\icons\\BookOpenIcon.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\icons\\BotMessageSquareIcon.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\icons\\BrainCircuitIcon.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\icons\\CalendarIcon.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\icons\\ChartBarIcon.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\icons\\CheckCircleIcon.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\icons\\CheckIcon.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\icons\\ChevronDownIcon.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\icons\\ChevronLeftIcon.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\icons\\ChevronRightIcon.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\icons\\ClearIcon.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\icons\\ClipboardCheckIcon.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\icons\\ClipboardIcon.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\icons\\ClipboardListIcon.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\icons\\ClockIcon.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\icons\\CloseIcon.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\icons\\CommandIcon.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\icons\\CompareIcon.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\icons\\ContractIcon.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\icons\\CrosshairIcon.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\icons\\CrownIcon.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\icons\\DollarSignIcon.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\icons\\DownloadIcon.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\icons\\DragHandleIcon.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\icons\\EmptyTumbleweedIcon.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\icons\\ExportIcon.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\icons\\EyeIcon.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\icons\\FileTextIcon.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\icons\\FilmIcon.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\icons\\FireIcon.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\icons\\FirstPlaceIcon.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\icons\\FlameIcon.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\icons\\FlaskConicalIcon.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\icons\\GavelIcon.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\icons\\GemIcon.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\icons\\GlobeIcon.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\icons\\HeartIcon.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\icons\\HistoryIcon.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\icons\\ImageIcon.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\icons\\InboxIcon.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\icons\\InfoIcon.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\icons\\InjuryIcon.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\icons\\LayoutIcon.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\icons\\LightbulbIcon.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\icons\\LinkIcon.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\icons\\ListChecksIcon.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\icons\\LogOutIcon.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\icons\\MailIcon.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\icons\\MaskIcon.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\icons\\MedalIcon.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\icons\\MegaphoneIcon.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\icons\\MenuIcon.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\icons\\MessageCircleIcon.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\icons\\MicrophoneIcon.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\icons\\MinusIcon.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\icons\\MoonIcon.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\icons\\MusicIcon.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\icons\\NewsIcon.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\icons\\NewspaperIcon.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\icons\\PaperPlaneIcon.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\icons\\PartyPopperIcon.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\icons\\PauseIcon.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\icons\\PawPrintIcon.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\icons\\PencilIcon.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\icons\\PercentIcon.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\icons\\PhoneIcon.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\icons\\PlayIcon.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\icons\\PlusCircleIcon.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\icons\\QueueIcon.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\icons\\RefineIcon.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\icons\\RefreshIcon.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\icons\\RestoreIcon.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\icons\\RobotIcon.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\icons\\SaveIcon.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\icons\\ScalesIcon.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\icons\\ScrollTextIcon.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\icons\\SearchIcon.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\icons\\SendIcon.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\icons\\SettingsIcon.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\icons\\Share2Icon.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\icons\\ShareIcon.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\icons\\ShieldAlertIcon.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\icons\\ShieldCheckIcon.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\icons\\SnowflakeIcon.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\icons\\SparklesIcon.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\icons\\StarFilledIcon.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\icons\\StarIcon.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\icons\\StopIcon.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\icons\\SunIcon.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\icons\\SwordIcon.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\icons\\SwordsIcon.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\icons\\TargetIcon.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\icons\\TelescopeIcon.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\icons\\TournamentIcon.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\icons\\Trash2Icon.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\icons\\TrashIcon.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\icons\\TrendingDownIcon.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\icons\\TrendingUpIcon.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\icons\\TrophyIcon.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\icons\\TvIcon.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\icons\\UserIcon.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\icons\\UserPlusIcon.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\icons\\UserRemoveIcon.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\icons\\UsersIcon.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\icons\\WandIcon.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\icons\\XCircleIcon.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\icons\\XIcon.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\icons\\ZapIcon.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\injury\\InjuryAlertNotification.tsx",
        "tests": {
          "hasErrorBoundary": true,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": true,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 33
      },
      {
        "file": "components\\injury\\InjuryDashboard.tsx",
        "tests": {
          "hasErrorBoundary": true,
          "hasAccessibility": false,
          "hasLoadingStates": true,
          "hasErrorHandling": true,
          "hasMobileSupport": true,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": true
        },
        "issues": [
          "Poor accessibility support"
        ],
        "suggestions": [
          "Add ARIA labels and semantic HTML"
        ],
        "score": 78
      },
      {
        "file": "components\\InputArea.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\layout\\MainLayout.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\layout\\MobileEnhancedDashboard.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": true,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": true
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations"
        ],
        "score": 33
      },
      {
        "file": "components\\layout\\MobileNavigation.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": true,
          "hasLoadingStates": true,
          "hasErrorHandling": false,
          "hasMobileSupport": true,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary"
        ],
        "suggestions": [
          "Add error boundary wrapper"
        ],
        "score": 56
      },
      {
        "file": "components\\league\\LeagueCreationWizard.tsx",
        "tests": {
          "hasErrorBoundary": true,
          "hasAccessibility": true,
          "hasLoadingStates": false,
          "hasErrorHandling": true,
          "hasMobileSupport": true,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing loading states"
        ],
        "suggestions": [
          "Add loading indicators for async operations"
        ],
        "score": 67
      },
      {
        "file": "components\\league\\LeagueMemorySystem.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": true,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations"
        ],
        "score": 33
      },
      {
        "file": "components\\league\\LeagueSuperlativesSystem.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": true,
          "hasErrorHandling": false,
          "hasMobileSupport": true,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML"
        ],
        "score": 44
      },
      {
        "file": "components\\league\\RivalryTracker.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": true,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations"
        ],
        "score": 22
      },
      {
        "file": "components\\league\\TeamIdentityCustomizer.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": true,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations"
        ],
        "score": 33
      },
      {
        "file": "components\\league\\TrashTalkSystem.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": true,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": true,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Missing loading states"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add loading indicators for async operations"
        ],
        "score": 33
      },
      {
        "file": "components\\league\\VictoryCelebrationSystem.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 22
      },
      {
        "file": "components\\league\\WeeklyChallengeSystem.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": true,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations"
        ],
        "score": 33
      },
      {
        "file": "components\\league\\WeeklyPowerRankings.tsx",
        "tests": {
          "hasErrorBoundary": true,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": true,
          "hasMobileSupport": true,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Poor accessibility support",
          "Missing loading states"
        ],
        "suggestions": [
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations"
        ],
        "score": 44
      },
      {
        "file": "components\\manager\\RivalryWidget.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": true,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": true
        },
        "issues": [
          "Missing error boundary",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 33
      },
      {
        "file": "components\\matchup\\LiveEventTicker.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\matchup\\MatchupAnalysisWidget.tsx",
        "tests": {
          "hasErrorBoundary": true,
          "hasAccessibility": false,
          "hasLoadingStates": true,
          "hasErrorHandling": true,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Poor accessibility support",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add ARIA labels and semantic HTML",
          "Add responsive design and touch interactions"
        ],
        "score": 44
      },
      {
        "file": "components\\matchup\\MatchupRosterView.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": true,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 22
      },
      {
        "file": "components\\matchup\\MatchupScoreboard.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": true,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations"
        ],
        "score": 22
      },
      {
        "file": "components\\matchup\\PlayerRow.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\matchup\\RivalryReportModal.tsx",
        "tests": {
          "hasErrorBoundary": true,
          "hasAccessibility": false,
          "hasLoadingStates": true,
          "hasErrorHandling": true,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Poor accessibility support",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add ARIA labels and semantic HTML",
          "Add responsive design and touch interactions"
        ],
        "score": 44
      },
      {
        "file": "components\\messages\\ConversationList.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": true
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 22
      },
      {
        "file": "components\\messages\\MessageThread.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": true
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 33
      },
      {
        "file": "components\\ml\\MLPredictionDashboard.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\mobile\\AccessibleMobileComponents.tsx",
        "tests": {
          "hasErrorBoundary": true,
          "hasAccessibility": true,
          "hasLoadingStates": false,
          "hasErrorHandling": true,
          "hasMobileSupport": true,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": true
        },
        "issues": [
          "Missing loading states"
        ],
        "suggestions": [
          "Add loading indicators for async operations"
        ],
        "score": 78
      },
      {
        "file": "components\\mobile\\EnhancedMobileOracleInterface.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": true,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": true
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations"
        ],
        "score": 44
      },
      {
        "file": "components\\mobile\\MobileAnalyticsDashboard.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": true,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations"
        ],
        "score": 22
      },
      {
        "file": "components\\mobile\\MobileBottomNavigation.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": true,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": true,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": true
        },
        "issues": [
          "Missing error boundary",
          "Missing loading states"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add loading indicators for async operations"
        ],
        "score": 56
      },
      {
        "file": "components\\mobile\\MobileDraftInterface.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": true,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": true
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations"
        ],
        "score": 33
      },
      {
        "file": "components\\mobile\\MobileGestureNavigation.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": true,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations"
        ],
        "score": 22
      },
      {
        "file": "components\\mobile\\MobileLayout.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": true,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": true
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations"
        ],
        "score": 33
      },
      {
        "file": "components\\mobile\\MobileLayoutWrapper.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": true,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": true,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": true
        },
        "issues": [
          "Missing error boundary",
          "Missing loading states"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add loading indicators for async operations"
        ],
        "score": 56
      },
      {
        "file": "components\\mobile\\MobileNavigation.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 22
      },
      {
        "file": "components\\mobile\\MobileOfflineIndicator.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": true,
          "hasLoadingStates": true,
          "hasErrorHandling": false,
          "hasMobileSupport": true,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary"
        ],
        "suggestions": [
          "Add error boundary wrapper"
        ],
        "score": 56
      },
      {
        "file": "components\\mobile\\MobilePlayerCard.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\mobile\\MobilePlayerSearch.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\mobile\\MobilePullToRefresh.tsx",
        "tests": {
          "hasErrorBoundary": true,
          "hasAccessibility": true,
          "hasLoadingStates": false,
          "hasErrorHandling": true,
          "hasMobileSupport": true,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing loading states"
        ],
        "suggestions": [
          "Add loading indicators for async operations"
        ],
        "score": 67
      },
      {
        "file": "components\\mobile\\MobileSearchInterface.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": true,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": true
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations"
        ],
        "score": 44
      },
      {
        "file": "components\\mobile\\PWAInstallPrompt.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 22
      },
      {
        "file": "components\\modals\\AnalyticsModal.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": true,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": true,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Missing loading states"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add loading indicators for async operations"
        ],
        "score": 44
      },
      {
        "file": "components\\modals\\AssignAwardsModal.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\modals\\ChecklistReportModal.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": true,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": true
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add responsive design and touch interactions"
        ],
        "score": 33
      },
      {
        "file": "components\\modals\\EditTeamBrandingModal.tsx",
        "tests": {
          "hasErrorBoundary": true,
          "hasAccessibility": true,
          "hasLoadingStates": true,
          "hasErrorHandling": true,
          "hasMobileSupport": false,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Limited mobile support"
        ],
        "suggestions": [
          "Add responsive design and touch interactions"
        ],
        "score": 67
      },
      {
        "file": "components\\modals\\HelpSupportModal.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": true,
          "hasErrorHandling": false,
          "hasMobileSupport": true,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML"
        ],
        "score": 44
      },
      {
        "file": "components\\modals\\ProfileModal.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": true,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations"
        ],
        "score": 33
      },
      {
        "file": "components\\modals\\ProposeSideBetModal.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": true,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations"
        ],
        "score": 22
      },
      {
        "file": "components\\modals\\ProposeTradeModal.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": true,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations"
        ],
        "score": 22
      },
      {
        "file": "components\\modals\\SettingsModal.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 22
      },
      {
        "file": "components\\modals\\ShareTeamCardModal.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": true,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add responsive design and touch interactions"
        ],
        "score": 22
      },
      {
        "file": "components\\modals\\TradeScenarioModal.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": true,
          "hasErrorHandling": false,
          "hasMobileSupport": true,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML"
        ],
        "score": 33
      },
      {
        "file": "components\\modals\\TradeStoryModal.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": true,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add responsive design and touch interactions"
        ],
        "score": 22
      },
      {
        "file": "components\\navigation\\EnhancedMobileNav.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": true,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": true
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations"
        ],
        "score": 44
      },
      {
        "file": "components\\navigation\\MobileResponsiveNav.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": true,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations"
        ],
        "score": 33
      },
      {
        "file": "components\\notifications\\NotificationBell.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": true,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 22
      },
      {
        "file": "components\\notifications\\NotificationCenter.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": true,
          "hasLoadingStates": true,
          "hasErrorHandling": true,
          "hasMobileSupport": false,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add responsive design and touch interactions"
        ],
        "score": 56
      },
      {
        "file": "components\\notifications\\NotificationDemo.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": true,
          "hasLoadingStates": true,
          "hasErrorHandling": false,
          "hasMobileSupport": true,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary"
        ],
        "suggestions": [
          "Add error boundary wrapper"
        ],
        "score": 44
      },
      {
        "file": "components\\notifications\\NotificationToast.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": true,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 33
      },
      {
        "file": "components\\onboarding\\FriendOnboardingGuide.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": true,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations"
        ],
        "score": 33
      },
      {
        "file": "components\\OnboardingGuide.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\optimization\\TeamOptimizationDashboard.tsx",
        "tests": {
          "hasErrorBoundary": true,
          "hasAccessibility": false,
          "hasLoadingStates": true,
          "hasErrorHandling": true,
          "hasMobileSupport": true,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Poor accessibility support"
        ],
        "suggestions": [
          "Add ARIA labels and semantic HTML"
        ],
        "score": 67
      },
      {
        "file": "components\\oracle\\AdvancedEnsembleMLDashboard.tsx",
        "tests": {
          "hasErrorBoundary": true,
          "hasAccessibility": false,
          "hasLoadingStates": true,
          "hasErrorHandling": true,
          "hasMobileSupport": true,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Poor accessibility support"
        ],
        "suggestions": [
          "Add ARIA labels and semantic HTML"
        ],
        "score": 56
      },
      {
        "file": "components\\oracle\\EnhancedOracleMLDashboard.tsx",
        "tests": {
          "hasErrorBoundary": true,
          "hasAccessibility": false,
          "hasLoadingStates": true,
          "hasErrorHandling": true,
          "hasMobileSupport": true,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Poor accessibility support"
        ],
        "suggestions": [
          "Add ARIA labels and semantic HTML"
        ],
        "score": 56
      },
      {
        "file": "components\\oracle\\EnhancedOracleMobileInterface.tsx",
        "tests": {
          "hasErrorBoundary": true,
          "hasAccessibility": false,
          "hasLoadingStates": true,
          "hasErrorHandling": true,
          "hasMobileSupport": true,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": true
        },
        "issues": [
          "Poor accessibility support"
        ],
        "suggestions": [
          "Add ARIA labels and semantic HTML"
        ],
        "score": 78
      },
      {
        "file": "components\\oracle\\EnsembleMLWidget.tsx",
        "tests": {
          "hasErrorBoundary": true,
          "hasAccessibility": true,
          "hasLoadingStates": true,
          "hasErrorHandling": true,
          "hasMobileSupport": true,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [],
        "suggestions": [],
        "score": 67
      },
      {
        "file": "components\\oracle\\MobileOptimizedOracleInterface.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": true,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations"
        ],
        "score": 33
      },
      {
        "file": "components\\oracle\\MobileOracleInterface.tsx",
        "tests": {
          "hasErrorBoundary": true,
          "hasAccessibility": true,
          "hasLoadingStates": false,
          "hasErrorHandling": true,
          "hasMobileSupport": true,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing loading states"
        ],
        "suggestions": [
          "Add loading indicators for async operations"
        ],
        "score": 67
      },
      {
        "file": "components\\oracle\\NotificationCenter.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": true,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 22
      },
      {
        "file": "components\\oracle\\NotificationDemo.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": true,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations"
        ],
        "score": 22
      },
      {
        "file": "components\\oracle\\NotificationPreferences.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": true,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 33
      },
      {
        "file": "components\\oracle\\OptimizedOracleRealTimePredictionInterface.tsx",
        "tests": {
          "hasErrorBoundary": true,
          "hasAccessibility": true,
          "hasLoadingStates": true,
          "hasErrorHandling": true,
          "hasMobileSupport": true,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": true
        },
        "issues": [],
        "suggestions": [],
        "score": 89
      },
      {
        "file": "components\\oracle\\OracleAnalyticsDashboard.tsx",
        "tests": {
          "hasErrorBoundary": true,
          "hasAccessibility": true,
          "hasLoadingStates": true,
          "hasErrorHandling": true,
          "hasMobileSupport": true,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [],
        "suggestions": [],
        "score": 78
      },
      {
        "file": "components\\oracle\\OracleArchitectureOverview.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": true,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 22
      },
      {
        "file": "components\\oracle\\OracleBeginnerTutorial.tsx",
        "tests": {
          "hasErrorBoundary": true,
          "hasAccessibility": true,
          "hasLoadingStates": false,
          "hasErrorHandling": true,
          "hasMobileSupport": true,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing loading states"
        ],
        "suggestions": [
          "Add loading indicators for async operations"
        ],
        "score": 56
      },
      {
        "file": "components\\oracle\\OracleCacheDashboard.tsx",
        "tests": {
          "hasErrorBoundary": true,
          "hasAccessibility": true,
          "hasLoadingStates": true,
          "hasErrorHandling": true,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Limited mobile support"
        ],
        "suggestions": [
          "Add responsive design and touch interactions"
        ],
        "score": 56
      },
      {
        "file": "components\\oracle\\OracleCalibrationValidationSection.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": true,
          "hasLoadingStates": true,
          "hasErrorHandling": true,
          "hasMobileSupport": false,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add responsive design and touch interactions"
        ],
        "score": 56
      },
      {
        "file": "components\\oracle\\OracleConfidenceEstimationSection.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": true,
          "hasLoadingStates": false,
          "hasErrorHandling": true,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 33
      },
      {
        "file": "components\\oracle\\OracleDataIngestionSection.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": true,
          "hasLoadingStates": false,
          "hasErrorHandling": true,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 33
      },
      {
        "file": "components\\oracle\\OracleEnsemblePredictionSection.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": true,
          "hasLoadingStates": false,
          "hasErrorHandling": true,
          "hasMobileSupport": false,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 44
      },
      {
        "file": "components\\oracle\\OracleErrorBoundary.tsx",
        "tests": {
          "hasErrorBoundary": true,
          "hasAccessibility": true,
          "hasLoadingStates": false,
          "hasErrorHandling": true,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 44
      },
      {
        "file": "components\\oracle\\OracleFeatureExtractionSection.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": true,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": true,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Missing loading states"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add loading indicators for async operations"
        ],
        "score": 33
      },
      {
        "file": "components\\oracle\\OracleGeminiAISection.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": true,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 22
      },
      {
        "file": "components\\oracle\\OracleLeaderboard.tsx",
        "tests": {
          "hasErrorBoundary": true,
          "hasAccessibility": false,
          "hasLoadingStates": true,
          "hasErrorHandling": true,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Poor accessibility support",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add ARIA labels and semantic HTML",
          "Add responsive design and touch interactions"
        ],
        "score": 44
      },
      {
        "file": "components\\oracle\\OracleNeuralNetworkSection.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": true,
          "hasLoadingStates": false,
          "hasErrorHandling": true,
          "hasMobileSupport": true,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Missing loading states"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add loading indicators for async operations"
        ],
        "score": 44
      },
      {
        "file": "components\\oracle\\OraclePanel.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 22
      },
      {
        "file": "components\\oracle\\OraclePerformanceDashboard.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": true,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": true,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": true
        },
        "issues": [
          "Missing error boundary",
          "Missing loading states"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add loading indicators for async operations"
        ],
        "score": 44
      },
      {
        "file": "components\\oracle\\OracleRealTimeDashboard.tsx",
        "tests": {
          "hasErrorBoundary": true,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": true,
          "hasMobileSupport": true,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Poor accessibility support",
          "Missing loading states"
        ],
        "suggestions": [
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations"
        ],
        "score": 56
      },
      {
        "file": "components\\oracle\\OracleRealTimePredictionInterface.tsx",
        "tests": {
          "hasErrorBoundary": true,
          "hasAccessibility": true,
          "hasLoadingStates": true,
          "hasErrorHandling": true,
          "hasMobileSupport": true,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": true
        },
        "issues": [],
        "suggestions": [],
        "score": 78
      },
      {
        "file": "components\\oracle\\OracleRewardsDashboard.tsx",
        "tests": {
          "hasErrorBoundary": true,
          "hasAccessibility": true,
          "hasLoadingStates": true,
          "hasErrorHandling": true,
          "hasMobileSupport": true,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": true
        },
        "issues": [],
        "suggestions": [],
        "score": 78
      },
      {
        "file": "components\\oracle\\OracleStatisticalModelingSection.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": true,
          "hasLoadingStates": false,
          "hasErrorHandling": true,
          "hasMobileSupport": true,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Missing loading states"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add loading indicators for async operations"
        ],
        "score": 44
      },
      {
        "file": "components\\oracle\\PredictionCard.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": true,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": true,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Missing loading states"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add loading indicators for async operations"
        ],
        "score": 44
      },
      {
        "file": "components\\oracle\\PredictionDetail.tsx",
        "tests": {
          "hasErrorBoundary": true,
          "hasAccessibility": true,
          "hasLoadingStates": false,
          "hasErrorHandling": true,
          "hasMobileSupport": true,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing loading states"
        ],
        "suggestions": [
          "Add loading indicators for async operations"
        ],
        "score": 56
      },
      {
        "file": "components\\oracle\\RealtimeUpdatesWidget.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": true,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": true,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Missing loading states"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add loading indicators for async operations"
        ],
        "score": 33
      },
      {
        "file": "components\\oracle\\TrainingDataManager.tsx",
        "tests": {
          "hasErrorBoundary": true,
          "hasAccessibility": true,
          "hasLoadingStates": true,
          "hasErrorHandling": true,
          "hasMobileSupport": true,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": true
        },
        "issues": [],
        "suggestions": [],
        "score": 78
      },
      {
        "file": "components\\oracle\\TrainingDataManagerNew.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\oracle\\UserStatsWidget.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": true,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations"
        ],
        "score": 22
      },
      {
        "file": "components\\OracleOnlyApp.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": true,
          "hasLoadingStates": true,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add responsive design and touch interactions"
        ],
        "score": 44
      },
      {
        "file": "components\\OutputArea.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\OutputGrid.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\payment\\PaymentCheckout.tsx",
        "tests": {
          "hasErrorBoundary": true,
          "hasAccessibility": false,
          "hasLoadingStates": true,
          "hasErrorHandling": true,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": true
        },
        "issues": [
          "Poor accessibility support",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add ARIA labels and semantic HTML",
          "Add responsive design and touch interactions"
        ],
        "score": 56
      },
      {
        "file": "components\\performance\\PerformanceMonitor.tsx",
        "tests": {
          "hasErrorBoundary": true,
          "hasAccessibility": true,
          "hasLoadingStates": false,
          "hasErrorHandling": true,
          "hasMobileSupport": false,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 56
      },
      {
        "file": "components\\player\\AdvancedStatsTab.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": true,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": true,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Missing loading states"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add loading indicators for async operations"
        ],
        "score": 33
      },
      {
        "file": "components\\player\\EnhancedPlayerDetailModal.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\player\\NewsAndUpdatesTab.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": true,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": true
        },
        "issues": [
          "Missing error boundary",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 33
      },
      {
        "file": "components\\player\\PlayerCard.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": true,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": true,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Missing loading states"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add loading indicators for async operations"
        ],
        "score": 44
      },
      {
        "file": "components\\player\\PlayerComparisonTab.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": true,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": true,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": true
        },
        "issues": [
          "Missing error boundary",
          "Missing loading states"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add loading indicators for async operations"
        ],
        "score": 56
      },
      {
        "file": "components\\player\\PlayerDetailModal.tsx",
        "tests": {
          "hasErrorBoundary": true,
          "hasAccessibility": true,
          "hasLoadingStates": false,
          "hasErrorHandling": true,
          "hasMobileSupport": true,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": true
        },
        "issues": [
          "Missing loading states"
        ],
        "suggestions": [
          "Add loading indicators for async operations"
        ],
        "score": 78
      },
      {
        "file": "components\\player\\PlayerPool.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": true,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": true
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations"
        ],
        "score": 44
      },
      {
        "file": "components\\player\\PlayerProfileView.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": true,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": true,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Missing loading states"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add loading indicators for async operations"
        ],
        "score": 33
      },
      {
        "file": "components\\player\\PlayerResearchInterface.tsx",
        "tests": {
          "hasErrorBoundary": true,
          "hasAccessibility": true,
          "hasLoadingStates": true,
          "hasErrorHandling": true,
          "hasMobileSupport": true,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": true
        },
        "issues": [],
        "suggestions": [],
        "score": 89
      },
      {
        "file": "components\\player\\SeasonTrendsTab.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": true,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": true,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Missing loading states"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add loading indicators for async operations"
        ],
        "score": 33
      },
      {
        "file": "components\\player\\SimilarPlayersPopup.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": true,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": true
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add responsive design and touch interactions"
        ],
        "score": 33
      },
      {
        "file": "components\\player\\tabs\\ContractTab.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": true,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations"
        ],
        "score": 22
      },
      {
        "file": "components\\player\\tabs\\FantasyTab.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": true,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": true,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": true
        },
        "issues": [
          "Missing error boundary",
          "Missing loading states"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add loading indicators for async operations"
        ],
        "score": 44
      },
      {
        "file": "components\\player\\tabs\\GameLogTab.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": true
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 22
      },
      {
        "file": "components\\player\\tabs\\IntelligenceTab.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": true,
          "hasErrorHandling": false,
          "hasMobileSupport": true,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML"
        ],
        "score": 33
      },
      {
        "file": "components\\player\\tabs\\OverviewTab.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": true,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations"
        ],
        "score": 22
      },
      {
        "file": "components\\player\\tabs\\ScoutingTab.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": true,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations"
        ],
        "score": 22
      },
      {
        "file": "components\\player\\tabs\\StoryTab.tsx",
        "tests": {
          "hasErrorBoundary": true,
          "hasAccessibility": false,
          "hasLoadingStates": true,
          "hasErrorHandling": true,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Poor accessibility support",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add ARIA labels and semantic HTML",
          "Add responsive design and touch interactions"
        ],
        "score": 44
      },
      {
        "file": "components\\players\\PlayerSearch.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": true,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": true
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations"
        ],
        "score": 33
      },
      {
        "file": "components\\prep\\DraftPreparationInterface.tsx",
        "tests": {
          "hasErrorBoundary": true,
          "hasAccessibility": false,
          "hasLoadingStates": true,
          "hasErrorHandling": true,
          "hasMobileSupport": true,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": true
        },
        "issues": [
          "Poor accessibility support"
        ],
        "suggestions": [
          "Add ARIA labels and semantic HTML"
        ],
        "score": 67
      },
      {
        "file": "components\\prep\\MockDraftHistory.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\prep\\MyRankingsEditor.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\PresentationMode.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\profile\\AchievementsWidget.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": true,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 22
      },
      {
        "file": "components\\ProjectSidebar.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\pwa\\PWAInstallPrompt.tsx",
        "tests": {
          "hasErrorBoundary": true,
          "hasAccessibility": true,
          "hasLoadingStates": true,
          "hasErrorHandling": true,
          "hasMobileSupport": true,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [],
        "suggestions": [],
        "score": 67
      },
      {
        "file": "components\\rankings\\PowerRankingCard.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\rankings\\PowerRankingCardSkeleton.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": true,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add responsive design and touch interactions"
        ],
        "score": 22
      },
      {
        "file": "components\\reports\\AdvancedReportingInterface.tsx",
        "tests": {
          "hasErrorBoundary": true,
          "hasAccessibility": true,
          "hasLoadingStates": true,
          "hasErrorHandling": true,
          "hasMobileSupport": true,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [],
        "suggestions": [],
        "score": 67
      },
      {
        "file": "components\\reports\\RecapVideoPlayer.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": true,
          "hasLoadingStates": true,
          "hasErrorHandling": false,
          "hasMobileSupport": true,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": true
        },
        "issues": [
          "Missing error boundary"
        ],
        "suggestions": [
          "Add error boundary wrapper"
        ],
        "score": 56
      },
      {
        "file": "components\\reports\\SeasonReviewDisplay.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": true,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations"
        ],
        "score": 22
      },
      {
        "file": "components\\reports\\WeeklyReportDisplay.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": true,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations"
        ],
        "score": 22
      },
      {
        "file": "components\\roster\\RosterManagement.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": true,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations"
        ],
        "score": 22
      },
      {
        "file": "components\\season\\EnhancedWaiverWire.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": true,
          "hasErrorHandling": false,
          "hasMobileSupport": true,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": true
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML"
        ],
        "score": 56
      },
      {
        "file": "components\\season\\LiveScoring.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": true
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 22
      },
      {
        "file": "components\\season\\ScheduleGenerator.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": true,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations"
        ],
        "score": 22
      },
      {
        "file": "components\\season\\TradingSystem.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": true,
          "hasErrorHandling": false,
          "hasMobileSupport": true,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": true
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML"
        ],
        "score": 44
      },
      {
        "file": "components\\season\\WeeklyMatchups.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": true,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": true
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations"
        ],
        "score": 44
      },
      {
        "file": "components\\season\\WeeklyRecap.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": true,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": true
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations"
        ],
        "score": 44
      },
      {
        "file": "components\\SettingsModal.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\SkeletonLoader.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": true,
          "hasErrorHandling": false,
          "hasMobileSupport": true,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML"
        ],
        "score": 33
      },
      {
        "file": "components\\social\\CommunityHubIntegration.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": true,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": true,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": true
        },
        "issues": [
          "Missing error boundary",
          "Missing loading states"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add loading indicators for async operations"
        ],
        "score": 44
      },
      {
        "file": "components\\social\\LeagueHistoryViewer.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": true,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": true,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": true
        },
        "issues": [
          "Missing error boundary",
          "Missing loading states"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add loading indicators for async operations"
        ],
        "score": 44
      },
      {
        "file": "components\\social\\SocialFeed.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": true,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": true,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": true
        },
        "issues": [
          "Missing error boundary",
          "Missing loading states"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add loading indicators for async operations"
        ],
        "score": 44
      },
      {
        "file": "components\\social\\SocialHub.tsx",
        "tests": {
          "hasErrorBoundary": true,
          "hasAccessibility": true,
          "hasLoadingStates": true,
          "hasErrorHandling": true,
          "hasMobileSupport": true,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [],
        "suggestions": [],
        "score": 67
      },
      {
        "file": "components\\social\\SocialTab.tsx",
        "tests": {
          "hasErrorBoundary": true,
          "hasAccessibility": false,
          "hasLoadingStates": true,
          "hasErrorHandling": true,
          "hasMobileSupport": true,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Poor accessibility support"
        ],
        "suggestions": [
          "Add ARIA labels and semantic HTML"
        ],
        "score": 67
      },
      {
        "file": "components\\social\\TeamStoryBuilder.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": true,
          "hasErrorHandling": false,
          "hasMobileSupport": true,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML"
        ],
        "score": 33
      },
      {
        "file": "components\\social\\TradeNegotiationChat.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": true,
          "hasLoadingStates": true,
          "hasErrorHandling": false,
          "hasMobileSupport": true,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary"
        ],
        "suggestions": [
          "Add error boundary wrapper"
        ],
        "score": 56
      },
      {
        "file": "components\\story\\StoryHighlightCard.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\story\\StorySection.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\strategy\\WarRoomPanel.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": true,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": true
        },
        "issues": [
          "Missing error boundary",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 33
      },
      {
        "file": "components\\team\\AiCoManagerWidget.tsx",
        "tests": {
          "hasErrorBoundary": true,
          "hasAccessibility": true,
          "hasLoadingStates": true,
          "hasErrorHandling": true,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Limited mobile support"
        ],
        "suggestions": [
          "Add responsive design and touch interactions"
        ],
        "score": 56
      },
      {
        "file": "components\\team\\BriefingItemCard.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\team\\ChampionshipOddsWidget.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": true,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 22
      },
      {
        "file": "components\\team\\CurrentMatchupWidget.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": true,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 22
      },
      {
        "file": "components\\team\\DailyBriefingWidget.tsx",
        "tests": {
          "hasErrorBoundary": true,
          "hasAccessibility": true,
          "hasLoadingStates": true,
          "hasErrorHandling": true,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Limited mobile support"
        ],
        "suggestions": [
          "Add responsive design and touch interactions"
        ],
        "score": 56
      },
      {
        "file": "components\\team\\EditHeaderModal.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 22
      },
      {
        "file": "components\\team\\EnhancedRosterManager.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": true,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": true,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Missing loading states"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add loading indicators for async operations"
        ],
        "score": 33
      },
      {
        "file": "components\\team\\FuturePicksWidget.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": true,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 22
      },
      {
        "file": "components\\team\\InjuryReportWidget.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": true,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 22
      },
      {
        "file": "components\\team\\LeagueTeamsList.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": true,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 22
      },
      {
        "file": "components\\team\\LineupOptimizer.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": true,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": true,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Missing loading states"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add loading indicators for async operations"
        ],
        "score": 44
      },
      {
        "file": "components\\team\\ManageTradeBlockModal.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": true,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": true,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": true
        },
        "issues": [
          "Missing error boundary",
          "Missing loading states"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add loading indicators for async operations"
        ],
        "score": 56
      },
      {
        "file": "components\\team\\MascotWidget.tsx",
        "tests": {
          "hasErrorBoundary": true,
          "hasAccessibility": true,
          "hasLoadingStates": true,
          "hasErrorHandling": true,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": true
        },
        "issues": [
          "Limited mobile support"
        ],
        "suggestions": [
          "Add responsive design and touch interactions"
        ],
        "score": 67
      },
      {
        "file": "components\\team\\PlaceClaimModal.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": true,
          "hasMobileSupport": true,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations"
        ],
        "score": 44
      },
      {
        "file": "components\\team\\ProposeTradeModal.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": true,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations"
        ],
        "score": 22
      },
      {
        "file": "components\\team\\SeasonOutlookWidget.tsx",
        "tests": {
          "hasErrorBoundary": true,
          "hasAccessibility": true,
          "hasLoadingStates": true,
          "hasErrorHandling": true,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Limited mobile support"
        ],
        "suggestions": [
          "Add responsive design and touch interactions"
        ],
        "score": 56
      },
      {
        "file": "components\\team\\StartSitWidget.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\team\\TeamAnalyticsDashboard.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": true,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": true,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Missing loading states"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add loading indicators for async operations"
        ],
        "score": 33
      },
      {
        "file": "components\\team\\TeamBrandingCard.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\team\\TeamChemistryWidget.tsx",
        "tests": {
          "hasErrorBoundary": true,
          "hasAccessibility": true,
          "hasLoadingStates": true,
          "hasErrorHandling": true,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Limited mobile support"
        ],
        "suggestions": [
          "Add responsive design and touch interactions"
        ],
        "score": 56
      },
      {
        "file": "components\\team\\TradeBlockWidget.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\team\\TradeCenterWidget.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": true,
          "hasLoadingStates": true,
          "hasErrorHandling": false,
          "hasMobileSupport": true,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": true
        },
        "issues": [
          "Missing error boundary"
        ],
        "suggestions": [
          "Add error boundary wrapper"
        ],
        "score": 56
      },
      {
        "file": "components\\team\\TradeOfferCard.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\team\\TradeWhispererWidget.tsx",
        "tests": {
          "hasErrorBoundary": true,
          "hasAccessibility": true,
          "hasLoadingStates": true,
          "hasErrorHandling": true,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Limited mobile support"
        ],
        "suggestions": [
          "Add responsive design and touch interactions"
        ],
        "score": 56
      },
      {
        "file": "components\\team\\TransactionHistory.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": true,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": true,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Missing loading states"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add loading indicators for async operations"
        ],
        "score": 33
      },
      {
        "file": "components\\team\\TrophyCaseWidget.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": true,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 22
      },
      {
        "file": "components\\team\\VisualRoster.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": true,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations"
        ],
        "score": 22
      },
      {
        "file": "components\\team\\WaiverIntelligenceWidget.tsx",
        "tests": {
          "hasErrorBoundary": true,
          "hasAccessibility": true,
          "hasLoadingStates": true,
          "hasErrorHandling": true,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Limited mobile support"
        ],
        "suggestions": [
          "Add responsive design and touch interactions"
        ],
        "score": 56
      },
      {
        "file": "components\\team\\WatchlistWidget.tsx",
        "tests": {
          "hasErrorBoundary": true,
          "hasAccessibility": true,
          "hasLoadingStates": false,
          "hasErrorHandling": true,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": true
        },
        "issues": [
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 56
      },
      {
        "file": "components\\TestEnvironmentSetup.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": true,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 22
      },
      {
        "file": "components\\trade\\AutomatedSuggestionsTab.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": true,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": true,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": true
        },
        "issues": [
          "Missing error boundary",
          "Missing loading states"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add loading indicators for async operations"
        ],
        "score": 44
      },
      {
        "file": "components\\trade\\FairnessAnalysisTab.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": true,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": true,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": true
        },
        "issues": [
          "Missing error boundary",
          "Missing loading states"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add loading indicators for async operations"
        ],
        "score": 44
      },
      {
        "file": "components\\trade\\ImpactAssessmentTab.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": true,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": true,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": true
        },
        "issues": [
          "Missing error boundary",
          "Missing loading states"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add loading indicators for async operations"
        ],
        "score": 44
      },
      {
        "file": "components\\trade\\index.ts",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": false,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 0
      },
      {
        "file": "components\\trade\\TradeAnalysisDashboard.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": true,
          "hasLoadingStates": true,
          "hasErrorHandling": true,
          "hasMobileSupport": false,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add responsive design and touch interactions"
        ],
        "score": 56
      },
      {
        "file": "components\\trade\\TradeAnalysisInterface.tsx",
        "tests": {
          "hasErrorBoundary": true,
          "hasAccessibility": true,
          "hasLoadingStates": false,
          "hasErrorHandling": true,
          "hasMobileSupport": true,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": true
        },
        "issues": [
          "Missing loading states"
        ],
        "suggestions": [
          "Add loading indicators for async operations"
        ],
        "score": 67
      },
      {
        "file": "components\\trade\\TradeAnalysisInterfaceClean.tsx",
        "tests": {
          "hasErrorBoundary": true,
          "hasAccessibility": true,
          "hasLoadingStates": false,
          "hasErrorHandling": true,
          "hasMobileSupport": true,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": true
        },
        "issues": [
          "Missing loading states"
        ],
        "suggestions": [
          "Add loading indicators for async operations"
        ],
        "score": 67
      },
      {
        "file": "components\\trade\\TradeAnalyzerView.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": true,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": true
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add responsive design and touch interactions"
        ],
        "score": 33
      },
      {
        "file": "components\\trade\\TradeBuilderTab.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": true,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": true,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": true
        },
        "issues": [
          "Missing error boundary",
          "Missing loading states"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add loading indicators for async operations"
        ],
        "score": 44
      },
      {
        "file": "components\\transactions\\WaiverWire.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": true,
          "hasErrorHandling": false,
          "hasMobileSupport": true,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": true
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML"
        ],
        "score": 56
      },
      {
        "file": "components\\trends\\PlayerPerformanceChart.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": true,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": true
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations"
        ],
        "score": 33
      },
      {
        "file": "components\\trends\\SeasonalTrendsChart.tsx",
        "tests": {
          "hasErrorBoundary": true,
          "hasAccessibility": false,
          "hasLoadingStates": true,
          "hasErrorHandling": true,
          "hasMobileSupport": true,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Poor accessibility support"
        ],
        "suggestions": [
          "Add ARIA labels and semantic HTML"
        ],
        "score": 56
      },
      {
        "file": "components\\trends\\WeeklyScoreChart.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": true,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": true
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations"
        ],
        "score": 33
      },
      {
        "file": "components\\ui\\AccessibleButton.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": true,
          "hasLoadingStates": true,
          "hasErrorHandling": false,
          "hasMobileSupport": true,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary"
        ],
        "suggestions": [
          "Add error boundary wrapper"
        ],
        "score": 56
      },
      {
        "file": "components\\ui\\AccessibleModal.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": true,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": true,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": true
        },
        "issues": [
          "Missing error boundary",
          "Missing loading states"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add loading indicators for async operations"
        ],
        "score": 56
      },
      {
        "file": "components\\ui\\Accordion.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": true,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 22
      },
      {
        "file": "components\\ui\\AnimatedNumber.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\ui\\AtomicErrorEliminator.tsx",
        "tests": {
          "hasErrorBoundary": true,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": true,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 33
      },
      {
        "file": "components\\ui\\Avatar.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": true,
          "hasLoadingStates": true,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": true
        },
        "issues": [
          "Missing error boundary",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add responsive design and touch interactions"
        ],
        "score": 44
      },
      {
        "file": "components\\ui\\Badge.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": true,
          "hasMobileSupport": true,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations"
        ],
        "score": 33
      },
      {
        "file": "components\\ui\\Breadcrumbs.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": true,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 22
      },
      {
        "file": "components\\ui\\Button.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": true,
          "hasErrorHandling": false,
          "hasMobileSupport": true,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML"
        ],
        "score": 44
      },
      {
        "file": "components\\ui\\Card.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": true,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations"
        ],
        "score": 33
      },
      {
        "file": "components\\ui\\Chart.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": true,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add responsive design and touch interactions"
        ],
        "score": 22
      },
      {
        "file": "components\\ui\\Checkbox.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": true,
          "hasLoadingStates": false,
          "hasErrorHandling": true,
          "hasMobileSupport": false,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 44
      },
      {
        "file": "components\\ui\\EmptyState.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\ui\\enhanced\\AccessibilitySystem.tsx",
        "tests": {
          "hasErrorBoundary": true,
          "hasAccessibility": true,
          "hasLoadingStates": false,
          "hasErrorHandling": true,
          "hasMobileSupport": true,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing loading states"
        ],
        "suggestions": [
          "Add loading indicators for async operations"
        ],
        "score": 67
      },
      {
        "file": "components\\ui\\enhanced\\AnimationLibrary.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\ui\\enhanced\\DashboardSystem.tsx",
        "tests": {
          "hasErrorBoundary": true,
          "hasAccessibility": true,
          "hasLoadingStates": false,
          "hasErrorHandling": true,
          "hasMobileSupport": true,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": true
        },
        "issues": [
          "Missing loading states"
        ],
        "suggestions": [
          "Add loading indicators for async operations"
        ],
        "score": 78
      },
      {
        "file": "components\\ui\\enhanced\\EnhancedButton.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": true,
          "hasLoadingStates": true,
          "hasErrorHandling": false,
          "hasMobileSupport": true,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary"
        ],
        "suggestions": [
          "Add error boundary wrapper"
        ],
        "score": 56
      },
      {
        "file": "components\\ui\\enhanced\\EnhancedCard.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": true,
          "hasLoadingStates": true,
          "hasErrorHandling": false,
          "hasMobileSupport": true,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary"
        ],
        "suggestions": [
          "Add error boundary wrapper"
        ],
        "score": 56
      },
      {
        "file": "components\\ui\\enhanced\\GlassmorphismEffects.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": true
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 33
      },
      {
        "file": "components\\ui\\enhanced\\index.ts",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": true,
          "hasKeyboardNav": false,
          "hasTypeScript": false,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations"
        ],
        "score": 11
      },
      {
        "file": "components\\ui\\enhanced\\MobileTouchSystem.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": true,
          "hasMobileSupport": true,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations"
        ],
        "score": 33
      },
      {
        "file": "components\\ui\\enhanced\\ResponsiveLayout.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": true,
          "hasLoadingStates": true,
          "hasErrorHandling": false,
          "hasMobileSupport": true,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": true
        },
        "issues": [
          "Missing error boundary"
        ],
        "suggestions": [
          "Add error boundary wrapper"
        ],
        "score": 56
      },
      {
        "file": "components\\ui\\ErrorBoundary.tsx",
        "tests": {
          "hasErrorBoundary": true,
          "hasAccessibility": false,
          "hasLoadingStates": true,
          "hasErrorHandling": true,
          "hasMobileSupport": false,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": true
        },
        "issues": [
          "Poor accessibility support",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add ARIA labels and semantic HTML",
          "Add responsive design and touch interactions"
        ],
        "score": 67
      },
      {
        "file": "components\\ui\\FocusTrap.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 22
      },
      {
        "file": "components\\ui\\GroundingCitations.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\ui\\HighContrastMode.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": true,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 22
      },
      {
        "file": "components\\ui\\index.ts",
        "tests": {
          "hasErrorBoundary": true,
          "hasAccessibility": false,
          "hasLoadingStates": true,
          "hasErrorHandling": true,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": false,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Poor accessibility support",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add ARIA labels and semantic HTML",
          "Add responsive design and touch interactions"
        ],
        "score": 33
      },
      {
        "file": "components\\ui\\Input.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": true,
          "hasLoadingStates": false,
          "hasErrorHandling": true,
          "hasMobileSupport": false,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 44
      },
      {
        "file": "components\\ui\\InstallPrompt.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": true,
          "hasLoadingStates": true,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add responsive design and touch interactions"
        ],
        "score": 33
      },
      {
        "file": "components\\ui\\LazyImage.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": true,
          "hasLoadingStates": false,
          "hasErrorHandling": true,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 33
      },
      {
        "file": "components\\ui\\LeagueCard.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\ui\\Loading.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": true,
          "hasErrorHandling": false,
          "hasMobileSupport": true,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML"
        ],
        "score": 33
      },
      {
        "file": "components\\ui\\LoadingSpinner.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": true,
          "hasErrorHandling": false,
          "hasMobileSupport": true,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML"
        ],
        "score": 33
      },
      {
        "file": "components\\ui\\MobileBottomNav.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": true,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 22
      },
      {
        "file": "components\\ui\\MobilePatterns.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": true,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": true,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": true
        },
        "issues": [
          "Missing error boundary",
          "Missing loading states"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add loading indicators for async operations"
        ],
        "score": 56
      },
      {
        "file": "components\\ui\\MobilePatternsSimple.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": true,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": true,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Missing loading states"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add loading indicators for async operations"
        ],
        "score": 44
      },
      {
        "file": "components\\ui\\Modal.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": true,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": true,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Missing loading states"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add loading indicators for async operations"
        ],
        "score": 44
      },
      {
        "file": "components\\ui\\ModalManager.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\ui\\ModernNavigation.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": true,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": true,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Missing loading states"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add loading indicators for async operations"
        ],
        "score": 44
      },
      {
        "file": "components\\ui\\Navigation.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": true,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations"
        ],
        "score": 22
      },
      {
        "file": "components\\ui\\NewsTicker.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\ui\\Notification.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 22
      },
      {
        "file": "components\\ui\\NotificationManager.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\ui\\OptimizedImage.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": true,
          "hasLoadingStates": true,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": true
        },
        "issues": [
          "Missing error boundary",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add responsive design and touch interactions"
        ],
        "score": 44
      },
      {
        "file": "components\\ui\\PremiumCard.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": true,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations"
        ],
        "score": 33
      },
      {
        "file": "components\\ui\\PremiumNavigation.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": true,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": true,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Missing loading states"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add loading indicators for async operations"
        ],
        "score": 44
      },
      {
        "file": "components\\ui\\Progress.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": true,
          "hasLoadingStates": false,
          "hasErrorHandling": true,
          "hasMobileSupport": true,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Missing loading states"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add loading indicators for async operations"
        ],
        "score": 44
      },
      {
        "file": "components\\ui\\PullToRefresh.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": true,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations"
        ],
        "score": 33
      },
      {
        "file": "components\\ui\\PWAInstallButton.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": true,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations"
        ],
        "score": 22
      },
      {
        "file": "components\\ui\\RadialChart.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\ui\\ResponsiveGrid.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": true,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations"
        ],
        "score": 22
      },
      {
        "file": "components\\ui\\SecureInput.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": true,
          "hasLoadingStates": false,
          "hasErrorHandling": true,
          "hasMobileSupport": true,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": true
        },
        "issues": [
          "Missing error boundary",
          "Missing loading states"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add loading indicators for async operations"
        ],
        "score": 67
      },
      {
        "file": "components\\ui\\Select.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": true,
          "hasLoadingStates": false,
          "hasErrorHandling": true,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 33
      },
      {
        "file": "components\\ui\\ShadcnTabs.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": true,
          "hasMobileSupport": false,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": true
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 44
      },
      {
        "file": "components\\ui\\SkipLink.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 22
      },
      {
        "file": "components\\ui\\SmartErrorBoundary.tsx",
        "tests": {
          "hasErrorBoundary": true,
          "hasAccessibility": false,
          "hasLoadingStates": true,
          "hasErrorHandling": true,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Poor accessibility support",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add ARIA labels and semantic HTML",
          "Add responsive design and touch interactions"
        ],
        "score": 44
      },
      {
        "file": "components\\ui\\SparklineChart.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\ui\\StatChart.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\ui\\Switch.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": true,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": true,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Missing loading states"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add loading indicators for async operations"
        ],
        "score": 44
      },
      {
        "file": "components\\ui\\Table.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\ui\\Tabs.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": true,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 22
      },
      {
        "file": "components\\ui\\TeamSwitcher.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": true,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations"
        ],
        "score": 33
      },
      {
        "file": "components\\ui\\Textarea.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": true,
          "hasLoadingStates": false,
          "hasErrorHandling": true,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 33
      },
      {
        "file": "components\\ui\\ThemeToggle.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": true,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 22
      },
      {
        "file": "components\\ui\\Toast.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": true,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 22
      },
      {
        "file": "components\\ui\\ToggleSwitch.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": true,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 22
      },
      {
        "file": "components\\ui\\Tooltip.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": true,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": true,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 33
      },
      {
        "file": "components\\ui\\TouchFeedback.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\ui\\VirtualComponents.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": true,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": true
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations"
        ],
        "score": 33
      },
      {
        "file": "components\\ui\\VirtualizedList.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\ui\\Widget.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": true,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations"
        ],
        "score": 22
      },
      {
        "file": "components\\workspace\\CommentSidebar.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\workspace\\EditorPanel.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\workspace\\OutputPanel.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      },
      {
        "file": "components\\workspace\\Workspace.tsx",
        "tests": {
          "hasErrorBoundary": false,
          "hasAccessibility": false,
          "hasLoadingStates": false,
          "hasErrorHandling": false,
          "hasMobileSupport": false,
          "hasKeyboardNav": false,
          "hasTypeScript": true,
          "hasTests": false,
          "performance": false
        },
        "issues": [
          "Missing error boundary",
          "Poor accessibility support",
          "Missing loading states",
          "Limited mobile support"
        ],
        "suggestions": [
          "Add error boundary wrapper",
          "Add ARIA labels and semantic HTML",
          "Add loading indicators for async operations",
          "Add responsive design and touch interactions"
        ],
        "score": 11
      }
    ],
    "features": [
      {
        "name": "Draft System",
        "tests": {
          "serviceExists": true,
          "componentsExist": true,
          "apiEndpoints": true,
          "errorHandling": true,
          "stateManagement": true,
          "realTimeUpdates": true,
          "mobileSupport": true
        },
        "issues": [],
        "score": 100
      },
      {
        "name": "Roster Management",
        "tests": {
          "serviceExists": true,
          "componentsExist": true,
          "apiEndpoints": true,
          "errorHandling": true,
          "stateManagement": true,
          "realTimeUpdates": true,
          "mobileSupport": true
        },
        "issues": [],
        "score": 100
      },
      {
        "name": "Trade System",
        "tests": {
          "serviceExists": true,
          "componentsExist": true,
          "apiEndpoints": true,
          "errorHandling": true,
          "stateManagement": true,
          "realTimeUpdates": true,
          "mobileSupport": true
        },
        "issues": [],
        "score": 100
      },
      {
        "name": "Waiver Wire",
        "tests": {
          "serviceExists": true,
          "componentsExist": true,
          "apiEndpoints": true,
          "errorHandling": true,
          "stateManagement": true,
          "realTimeUpdates": true,
          "mobileSupport": true
        },
        "issues": [],
        "score": 100
      },
      {
        "name": "Scoring System",
        "tests": {
          "serviceExists": true,
          "componentsExist": true,
          "apiEndpoints": true,
          "errorHandling": true,
          "stateManagement": true,
          "realTimeUpdates": true,
          "mobileSupport": true
        },
        "issues": [],
        "score": 100
      },
      {
        "name": "League Management",
        "tests": {
          "serviceExists": true,
          "componentsExist": true,
          "apiEndpoints": true,
          "errorHandling": true,
          "stateManagement": true,
          "realTimeUpdates": true,
          "mobileSupport": true
        },
        "issues": [],
        "score": 100
      },
      {
        "name": "Player Research",
        "tests": {
          "serviceExists": true,
          "componentsExist": true,
          "apiEndpoints": true,
          "errorHandling": true,
          "stateManagement": true,
          "realTimeUpdates": true,
          "mobileSupport": true
        },
        "issues": [],
        "score": 100
      },
      {
        "name": "Analytics Dashboard",
        "tests": {
          "serviceExists": true,
          "componentsExist": true,
          "apiEndpoints": true,
          "errorHandling": true,
          "stateManagement": true,
          "realTimeUpdates": true,
          "mobileSupport": true
        },
        "issues": [],
        "score": 100
      }
    ],
    "navigation": [
      {
        "name": "Main Navigation",
        "tests": {
          "headerLinks": true,
          "menuDropdowns": true,
          "activeStates": true,
          "logoLink": true
        },
        "issues": [],
        "score": 100
      },
      {
        "name": "Breadcrumbs",
        "score": 90,
        "issues": []
      },
      {
        "name": "Deep Linking",
        "score": 85,
        "issues": []
      },
      {
        "name": "Mobile Navigation",
        "score": 95,
        "issues": []
      },
      {
        "name": "Route Protection",
        "score": 100,
        "issues": []
      },
      {
        "name": "State Preservation",
        "score": 80,
        "issues": []
      },
      {
        "name": "Back Button",
        "score": 90,
        "issues": []
      }
    ],
    "apis": [
      {
        "file": "services\\accessibilityMonitoringService.ts",
        "tests": {
          "hasErrorHandling": true,
          "hasLogging": true,
          "hasValidation": false,
          "hasRetryLogic": false,
          "hasRateLimiting": false,
          "hasAuthentication": false,
          "hasDocumentation": true
        },
        "issues": [
          "Missing validation",
          "Missing retrylogic",
          "Missing ratelimiting",
          "Missing authentication"
        ],
        "score": 43
      },
      {
        "file": "services\\adminService.ts",
        "tests": {
          "hasErrorHandling": false,
          "hasLogging": true,
          "hasValidation": false,
          "hasRetryLogic": false,
          "hasRateLimiting": false,
          "hasAuthentication": true,
          "hasDocumentation": true
        },
        "issues": [
          "Missing errorhandling",
          "Missing validation",
          "Missing retrylogic",
          "Missing ratelimiting"
        ],
        "score": 43
      },
      {
        "file": "services\\advancedAiDraftCoach.ts",
        "tests": {
          "hasErrorHandling": false,
          "hasLogging": false,
          "hasValidation": false,
          "hasRetryLogic": false,
          "hasRateLimiting": false,
          "hasAuthentication": false,
          "hasDocumentation": true
        },
        "issues": [
          "Missing errorhandling",
          "Missing logging",
          "Missing validation",
          "Missing retrylogic",
          "Missing ratelimiting",
          "Missing authentication"
        ],
        "score": 14
      },
      {
        "file": "services\\advancedAnalyticsDashboardService.ts",
        "tests": {
          "hasErrorHandling": true,
          "hasLogging": true,
          "hasValidation": false,
          "hasRetryLogic": false,
          "hasRateLimiting": false,
          "hasAuthentication": false,
          "hasDocumentation": true
        },
        "issues": [
          "Missing validation",
          "Missing retrylogic",
          "Missing ratelimiting",
          "Missing authentication"
        ],
        "score": 43
      },
      {
        "file": "services\\advancedAnalyticsEngine.ts",
        "tests": {
          "hasErrorHandling": false,
          "hasLogging": false,
          "hasValidation": false,
          "hasRetryLogic": false,
          "hasRateLimiting": false,
          "hasAuthentication": false,
          "hasDocumentation": true
        },
        "issues": [
          "Missing errorhandling",
          "Missing logging",
          "Missing validation",
          "Missing retrylogic",
          "Missing ratelimiting",
          "Missing authentication"
        ],
        "score": 14
      },
      {
        "file": "services\\advancedDraftTechnologiesService.ts",
        "tests": {
          "hasErrorHandling": true,
          "hasLogging": true,
          "hasValidation": false,
          "hasRetryLogic": false,
          "hasRateLimiting": false,
          "hasAuthentication": false,
          "hasDocumentation": true
        },
        "issues": [
          "Missing validation",
          "Missing retrylogic",
          "Missing ratelimiting",
          "Missing authentication"
        ],
        "score": 43
      },
      {
        "file": "services\\advancedLiveScoringService.ts",
        "tests": {
          "hasErrorHandling": true,
          "hasLogging": true,
          "hasValidation": false,
          "hasRetryLogic": false,
          "hasRateLimiting": false,
          "hasAuthentication": false,
          "hasDocumentation": true
        },
        "issues": [
          "Missing validation",
          "Missing retrylogic",
          "Missing ratelimiting",
          "Missing authentication"
        ],
        "score": 43
      },
      {
        "file": "services\\advancedReportingService.ts",
        "tests": {
          "hasErrorHandling": false,
          "hasLogging": false,
          "hasValidation": false,
          "hasRetryLogic": false,
          "hasRateLimiting": false,
          "hasAuthentication": false,
          "hasDocumentation": false
        },
        "issues": [
          "Missing errorhandling",
          "Missing logging",
          "Missing validation",
          "Missing retrylogic",
          "Missing ratelimiting",
          "Missing authentication",
          "Missing documentation"
        ],
        "score": 0
      },
      {
        "file": "services\\advancedTeamOptimizer.ts",
        "tests": {
          "hasErrorHandling": false,
          "hasLogging": false,
          "hasValidation": false,
          "hasRetryLogic": false,
          "hasRateLimiting": false,
          "hasAuthentication": false,
          "hasDocumentation": true
        },
        "issues": [
          "Missing errorhandling",
          "Missing logging",
          "Missing validation",
          "Missing retrylogic",
          "Missing ratelimiting",
          "Missing authentication"
        ],
        "score": 14
      },
      {
        "file": "services\\advancedTradeMarketplaceService.ts",
        "tests": {
          "hasErrorHandling": true,
          "hasLogging": true,
          "hasValidation": false,
          "hasRetryLogic": false,
          "hasRateLimiting": false,
          "hasAuthentication": true,
          "hasDocumentation": true
        },
        "issues": [
          "Missing validation",
          "Missing retrylogic",
          "Missing ratelimiting"
        ],
        "score": 57
      },
      {
        "file": "services\\aiDraftAnalysisService.ts",
        "tests": {
          "hasErrorHandling": false,
          "hasLogging": false,
          "hasValidation": false,
          "hasRetryLogic": false,
          "hasRateLimiting": false,
          "hasAuthentication": false,
          "hasDocumentation": true
        },
        "issues": [
          "Missing errorhandling",
          "Missing logging",
          "Missing validation",
          "Missing retrylogic",
          "Missing ratelimiting",
          "Missing authentication"
        ],
        "score": 14
      },
      {
        "file": "services\\aiDraftCoachService.ts",
        "tests": {
          "hasErrorHandling": true,
          "hasLogging": true,
          "hasValidation": false,
          "hasRetryLogic": false,
          "hasRateLimiting": false,
          "hasAuthentication": false,
          "hasDocumentation": true
        },
        "issues": [
          "Missing validation",
          "Missing retrylogic",
          "Missing ratelimiting",
          "Missing authentication"
        ],
        "score": 43
      },
      {
        "file": "services\\aiRecommendationEngine.ts",
        "tests": {
          "hasErrorHandling": false,
          "hasLogging": false,
          "hasValidation": false,
          "hasRetryLogic": false,
          "hasRateLimiting": false,
          "hasAuthentication": false,
          "hasDocumentation": true
        },
        "issues": [
          "Missing errorhandling",
          "Missing logging",
          "Missing validation",
          "Missing retrylogic",
          "Missing ratelimiting",
          "Missing authentication"
        ],
        "score": 14
      },
      {
        "file": "services\\aiTradeAnalyzer.ts",
        "tests": {
          "hasErrorHandling": false,
          "hasLogging": true,
          "hasValidation": false,
          "hasRetryLogic": false,
          "hasRateLimiting": false,
          "hasAuthentication": false,
          "hasDocumentation": true
        },
        "issues": [
          "Missing errorhandling",
          "Missing validation",
          "Missing retrylogic",
          "Missing ratelimiting",
          "Missing authentication"
        ],
        "score": 29
      },
      {
        "file": "services\\apiClient.ts",
        "tests": {
          "hasErrorHandling": true,
          "hasLogging": true,
          "hasValidation": false,
          "hasRetryLogic": true,
          "hasRateLimiting": true,
          "hasAuthentication": true,
          "hasDocumentation": true
        },
        "issues": [
          "Missing validation"
        ],
        "score": 86
      },
      {
        "file": "services\\apiService.ts",
        "tests": {
          "hasErrorHandling": true,
          "hasLogging": true,
          "hasValidation": false,
          "hasRetryLogic": false,
          "hasRateLimiting": false,
          "hasAuthentication": true,
          "hasDocumentation": true
        },
        "issues": [
          "Missing validation",
          "Missing retrylogic",
          "Missing ratelimiting"
        ],
        "score": 57
      },
      {
        "file": "services\\authService.ts",
        "tests": {
          "hasErrorHandling": true,
          "hasLogging": true,
          "hasValidation": true,
          "hasRetryLogic": false,
          "hasRateLimiting": false,
          "hasAuthentication": true,
          "hasDocumentation": true
        },
        "issues": [
          "Missing retrylogic",
          "Missing ratelimiting"
        ],
        "score": 71
      },
      {
        "file": "services\\autoDraftService.ts",
        "tests": {
          "hasErrorHandling": false,
          "hasLogging": true,
          "hasValidation": false,
          "hasRetryLogic": false,
          "hasRateLimiting": false,
          "hasAuthentication": false,
          "hasDocumentation": true
        },
        "issues": [
          "Missing errorhandling",
          "Missing validation",
          "Missing retrylogic",
          "Missing ratelimiting",
          "Missing authentication"
        ],
        "score": 29
      },
      {
        "file": "services\\cacheService.ts",
        "tests": {
          "hasErrorHandling": true,
          "hasLogging": true,
          "hasValidation": false,
          "hasRetryLogic": false,
          "hasRateLimiting": false,
          "hasAuthentication": false,
          "hasDocumentation": true
        },
        "issues": [
          "Missing validation",
          "Missing retrylogic",
          "Missing ratelimiting",
          "Missing authentication"
        ],
        "score": 43
      },
      {
        "file": "services\\celebrityDraftPersonas.ts",
        "tests": {
          "hasErrorHandling": false,
          "hasLogging": false,
          "hasValidation": false,
          "hasRetryLogic": false,
          "hasRateLimiting": false,
          "hasAuthentication": false,
          "hasDocumentation": true
        },
        "issues": [
          "Missing errorhandling",
          "Missing logging",
          "Missing validation",
          "Missing retrylogic",
          "Missing ratelimiting",
          "Missing authentication"
        ],
        "score": 14
      },
      {
        "file": "services\\contestScoringService.ts",
        "tests": {
          "hasErrorHandling": true,
          "hasLogging": true,
          "hasValidation": false,
          "hasRetryLogic": false,
          "hasRateLimiting": false,
          "hasAuthentication": false,
          "hasDocumentation": true
        },
        "issues": [
          "Missing validation",
          "Missing retrylogic",
          "Missing ratelimiting",
          "Missing authentication"
        ],
        "score": 43
      },
      {
        "file": "services\\core\\DynastyLeagueService.ts",
        "tests": {
          "hasErrorHandling": true,
          "hasLogging": true,
          "hasValidation": false,
          "hasRetryLogic": false,
          "hasRateLimiting": false,
          "hasAuthentication": false,
          "hasDocumentation": true
        },
        "issues": [
          "Missing validation",
          "Missing retrylogic",
          "Missing ratelimiting",
          "Missing authentication"
        ],
        "score": 43
      },
      {
        "file": "services\\core\\FantasyDataService.ts",
        "tests": {
          "hasErrorHandling": true,
          "hasLogging": true,
          "hasValidation": true,
          "hasRetryLogic": true,
          "hasRateLimiting": false,
          "hasAuthentication": false,
          "hasDocumentation": true
        },
        "issues": [
          "Missing ratelimiting",
          "Missing authentication"
        ],
        "score": 71
      },
      {
        "file": "services\\core\\MLTradeAnalyzer.ts",
        "tests": {
          "hasErrorHandling": true,
          "hasLogging": true,
          "hasValidation": false,
          "hasRetryLogic": false,
          "hasRateLimiting": false,
          "hasAuthentication": false,
          "hasDocumentation": true
        },
        "issues": [
          "Missing validation",
          "Missing retrylogic",
          "Missing ratelimiting",
          "Missing authentication"
        ],
        "score": 43
      },
      {
        "file": "services\\databaseOptimization.ts",
        "tests": {
          "hasErrorHandling": true,
          "hasLogging": true,
          "hasValidation": false,
          "hasRetryLogic": false,
          "hasRateLimiting": false,
          "hasAuthentication": true,
          "hasDocumentation": true
        },
        "issues": [
          "Missing validation",
          "Missing retrylogic",
          "Missing ratelimiting"
        ],
        "score": 57
      },
      {
        "file": "services\\dataPersistenceService.ts",
        "tests": {
          "hasErrorHandling": true,
          "hasLogging": true,
          "hasValidation": false,
          "hasRetryLogic": false,
          "hasRateLimiting": false,
          "hasAuthentication": true,
          "hasDocumentation": true
        },
        "issues": [
          "Missing validation",
          "Missing retrylogic",
          "Missing ratelimiting"
        ],
        "score": 57
      },
      {
        "file": "services\\draftPreparationService.ts",
        "tests": {
          "hasErrorHandling": true,
          "hasLogging": true,
          "hasValidation": false,
          "hasRetryLogic": false,
          "hasRateLimiting": false,
          "hasAuthentication": false,
          "hasDocumentation": true
        },
        "issues": [
          "Missing validation",
          "Missing retrylogic",
          "Missing ratelimiting",
          "Missing authentication"
        ],
        "score": 43
      },
      {
        "file": "services\\draftSimulationEngine.ts",
        "tests": {
          "hasErrorHandling": false,
          "hasLogging": true,
          "hasValidation": false,
          "hasRetryLogic": false,
          "hasRateLimiting": false,
          "hasAuthentication": false,
          "hasDocumentation": true
        },
        "issues": [
          "Missing errorhandling",
          "Missing validation",
          "Missing retrylogic",
          "Missing ratelimiting",
          "Missing authentication"
        ],
        "score": 29
      },
      {
        "file": "services\\draftWebSocketService.ts",
        "tests": {
          "hasErrorHandling": true,
          "hasLogging": true,
          "hasValidation": false,
          "hasRetryLogic": true,
          "hasRateLimiting": false,
          "hasAuthentication": false,
          "hasDocumentation": true
        },
        "issues": [
          "Missing validation",
          "Missing ratelimiting",
          "Missing authentication"
        ],
        "score": 57
      },
      {
        "file": "services\\enhancedAnalyticsService.ts",
        "tests": {
          "hasErrorHandling": false,
          "hasLogging": false,
          "hasValidation": false,
          "hasRetryLogic": false,
          "hasRateLimiting": false,
          "hasAuthentication": false,
          "hasDocumentation": true
        },
        "issues": [
          "Missing errorhandling",
          "Missing logging",
          "Missing validation",
          "Missing retrylogic",
          "Missing ratelimiting",
          "Missing authentication"
        ],
        "score": 14
      },
      {
        "file": "services\\enhancedAuthService.ts",
        "tests": {
          "hasErrorHandling": true,
          "hasLogging": true,
          "hasValidation": true,
          "hasRetryLogic": true,
          "hasRateLimiting": false,
          "hasAuthentication": true,
          "hasDocumentation": true
        },
        "issues": [
          "Missing ratelimiting"
        ],
        "score": 86
      },
      {
        "file": "services\\enhancedCacheService.ts",
        "tests": {
          "hasErrorHandling": true,
          "hasLogging": true,
          "hasValidation": true,
          "hasRetryLogic": false,
          "hasRateLimiting": false,
          "hasAuthentication": false,
          "hasDocumentation": true
        },
        "issues": [
          "Missing retrylogic",
          "Missing ratelimiting",
          "Missing authentication"
        ],
        "score": 57
      },
      {
        "file": "services\\enhancedDraftEngine.ts",
        "tests": {
          "hasErrorHandling": true,
          "hasLogging": true,
          "hasValidation": false,
          "hasRetryLogic": false,
          "hasRateLimiting": false,
          "hasAuthentication": false,
          "hasDocumentation": true
        },
        "issues": [
          "Missing validation",
          "Missing retrylogic",
          "Missing ratelimiting",
          "Missing authentication"
        ],
        "score": 43
      },
      {
        "file": "services\\enhancedDraftSimulationEngine.ts",
        "tests": {
          "hasErrorHandling": false,
          "hasLogging": false,
          "hasValidation": false,
          "hasRetryLogic": false,
          "hasRateLimiting": false,
          "hasAuthentication": false,
          "hasDocumentation": true
        },
        "issues": [
          "Missing errorhandling",
          "Missing logging",
          "Missing validation",
          "Missing retrylogic",
          "Missing ratelimiting",
          "Missing authentication"
        ],
        "score": 14
      },
      {
        "file": "services\\enhancedMatchupAnalyticsService.ts",
        "tests": {
          "hasErrorHandling": true,
          "hasLogging": true,
          "hasValidation": false,
          "hasRetryLogic": true,
          "hasRateLimiting": false,
          "hasAuthentication": false,
          "hasDocumentation": true
        },
        "issues": [
          "Missing validation",
          "Missing ratelimiting",
          "Missing authentication"
        ],
        "score": 57
      },
      {
        "file": "services\\enhancedNotificationService.ts",
        "tests": {
          "hasErrorHandling": true,
          "hasLogging": true,
          "hasValidation": false,
          "hasRetryLogic": false,
          "hasRateLimiting": false,
          "hasAuthentication": true,
          "hasDocumentation": true
        },
        "issues": [
          "Missing validation",
          "Missing retrylogic",
          "Missing ratelimiting"
        ],
        "score": 57
      },
      {
        "file": "services\\enhancedRealTimeSyncService.ts",
        "tests": {
          "hasErrorHandling": true,
          "hasLogging": true,
          "hasValidation": true,
          "hasRetryLogic": false,
          "hasRateLimiting": false,
          "hasAuthentication": true,
          "hasDocumentation": true
        },
        "issues": [
          "Missing retrylogic",
          "Missing ratelimiting"
        ],
        "score": 71
      },
      {
        "file": "services\\enhancedTradeAnalysisEngine.ts",
        "tests": {
          "hasErrorHandling": false,
          "hasLogging": false,
          "hasValidation": false,
          "hasRetryLogic": false,
          "hasRateLimiting": false,
          "hasAuthentication": false,
          "hasDocumentation": false
        },
        "issues": [
          "Missing errorhandling",
          "Missing logging",
          "Missing validation",
          "Missing retrylogic",
          "Missing ratelimiting",
          "Missing authentication",
          "Missing documentation"
        ],
        "score": 0
      },
      {
        "file": "services\\enhancedWebSocketService.ts",
        "tests": {
          "hasErrorHandling": true,
          "hasLogging": true,
          "hasValidation": false,
          "hasRetryLogic": true,
          "hasRateLimiting": false,
          "hasAuthentication": true,
          "hasDocumentation": true
        },
        "issues": [
          "Missing validation",
          "Missing ratelimiting"
        ],
        "score": 71
      },
      {
        "file": "services\\geminiService.ts",
        "tests": {
          "hasErrorHandling": true,
          "hasLogging": true,
          "hasValidation": false,
          "hasRetryLogic": false,
          "hasRateLimiting": false,
          "hasAuthentication": false,
          "hasDocumentation": true
        },
        "issues": [
          "Missing validation",
          "Missing retrylogic",
          "Missing ratelimiting",
          "Missing authentication"
        ],
        "score": 43
      },
      {
        "file": "services\\geminiServiceSecure.ts",
        "tests": {
          "hasErrorHandling": true,
          "hasLogging": true,
          "hasValidation": false,
          "hasRetryLogic": false,
          "hasRateLimiting": false,
          "hasAuthentication": false,
          "hasDocumentation": true
        },
        "issues": [
          "Missing validation",
          "Missing retrylogic",
          "Missing ratelimiting",
          "Missing authentication"
        ],
        "score": 43
      },
      {
        "file": "services\\geniusAiAssistant.ts",
        "tests": {
          "hasErrorHandling": false,
          "hasLogging": false,
          "hasValidation": false,
          "hasRetryLogic": false,
          "hasRateLimiting": false,
          "hasAuthentication": false,
          "hasDocumentation": true
        },
        "issues": [
          "Missing errorhandling",
          "Missing logging",
          "Missing validation",
          "Missing retrylogic",
          "Missing ratelimiting",
          "Missing authentication"
        ],
        "score": 14
      },
      {
        "file": "services\\injuryTrackingService.ts",
        "tests": {
          "hasErrorHandling": true,
          "hasLogging": true,
          "hasValidation": false,
          "hasRetryLogic": false,
          "hasRateLimiting": false,
          "hasAuthentication": false,
          "hasDocumentation": true
        },
        "issues": [
          "Missing validation",
          "Missing retrylogic",
          "Missing ratelimiting",
          "Missing authentication"
        ],
        "score": 43
      },
      {
        "file": "services\\leagueInitializationService.ts",
        "tests": {
          "hasErrorHandling": false,
          "hasLogging": true,
          "hasValidation": false,
          "hasRetryLogic": false,
          "hasRateLimiting": false,
          "hasAuthentication": false,
          "hasDocumentation": true
        },
        "issues": [
          "Missing errorhandling",
          "Missing validation",
          "Missing retrylogic",
          "Missing ratelimiting",
          "Missing authentication"
        ],
        "score": 29
      },
      {
        "file": "services\\leagueManagementService.ts",
        "tests": {
          "hasErrorHandling": false,
          "hasLogging": false,
          "hasValidation": false,
          "hasRetryLogic": false,
          "hasRateLimiting": false,
          "hasAuthentication": false,
          "hasDocumentation": true
        },
        "issues": [
          "Missing errorhandling",
          "Missing logging",
          "Missing validation",
          "Missing retrylogic",
          "Missing ratelimiting",
          "Missing authentication"
        ],
        "score": 14
      },
      {
        "file": "services\\lineupOptimizerEngine.ts",
        "tests": {
          "hasErrorHandling": false,
          "hasLogging": false,
          "hasValidation": false,
          "hasRetryLogic": false,
          "hasRateLimiting": false,
          "hasAuthentication": false,
          "hasDocumentation": true
        },
        "issues": [
          "Missing errorhandling",
          "Missing logging",
          "Missing validation",
          "Missing retrylogic",
          "Missing ratelimiting",
          "Missing authentication"
        ],
        "score": 14
      },
      {
        "file": "services\\liveDataService.ts",
        "tests": {
          "hasErrorHandling": true,
          "hasLogging": true,
          "hasValidation": false,
          "hasRetryLogic": false,
          "hasRateLimiting": false,
          "hasAuthentication": false,
          "hasDocumentation": true
        },
        "issues": [
          "Missing validation",
          "Missing retrylogic",
          "Missing ratelimiting",
          "Missing authentication"
        ],
        "score": 43
      },
      {
        "file": "services\\liveScoringService.ts",
        "tests": {
          "hasErrorHandling": true,
          "hasLogging": true,
          "hasValidation": false,
          "hasRetryLogic": true,
          "hasRateLimiting": false,
          "hasAuthentication": false,
          "hasDocumentation": true
        },
        "issues": [
          "Missing validation",
          "Missing ratelimiting",
          "Missing authentication"
        ],
        "score": 57
      },
      {
        "file": "services\\loggingService.ts",
        "tests": {
          "hasErrorHandling": true,
          "hasLogging": true,
          "hasValidation": false,
          "hasRetryLogic": false,
          "hasRateLimiting": false,
          "hasAuthentication": false,
          "hasDocumentation": true
        },
        "issues": [
          "Missing validation",
          "Missing retrylogic",
          "Missing ratelimiting",
          "Missing authentication"
        ],
        "score": 43
      },
      {
        "file": "services\\machineLearningPlayerPredictionService.ts",
        "tests": {
          "hasErrorHandling": true,
          "hasLogging": true,
          "hasValidation": false,
          "hasRetryLogic": false,
          "hasRateLimiting": false,
          "hasAuthentication": false,
          "hasDocumentation": true
        },
        "issues": [
          "Missing validation",
          "Missing retrylogic",
          "Missing ratelimiting",
          "Missing authentication"
        ],
        "score": 43
      },
      {
        "file": "services\\marketInefficiencyDetector.ts",
        "tests": {
          "hasErrorHandling": false,
          "hasLogging": false,
          "hasValidation": false,
          "hasRetryLogic": false,
          "hasRateLimiting": false,
          "hasAuthentication": false,
          "hasDocumentation": true
        },
        "issues": [
          "Missing errorhandling",
          "Missing logging",
          "Missing validation",
          "Missing retrylogic",
          "Missing ratelimiting",
          "Missing authentication"
        ],
        "score": 14
      },
      {
        "file": "services\\matchupDifficultyAnalyzer.ts",
        "tests": {
          "hasErrorHandling": true,
          "hasLogging": true,
          "hasValidation": false,
          "hasRetryLogic": false,
          "hasRateLimiting": false,
          "hasAuthentication": false,
          "hasDocumentation": true
        },
        "issues": [
          "Missing validation",
          "Missing retrylogic",
          "Missing ratelimiting",
          "Missing authentication"
        ],
        "score": 43
      },
      {
        "file": "services\\mobileOfflineService.ts",
        "tests": {
          "hasErrorHandling": true,
          "hasLogging": true,
          "hasValidation": false,
          "hasRetryLogic": true,
          "hasRateLimiting": false,
          "hasAuthentication": false,
          "hasDocumentation": true
        },
        "issues": [
          "Missing validation",
          "Missing ratelimiting",
          "Missing authentication"
        ],
        "score": 57
      },
      {
        "file": "services\\netlifyAuthService.ts",
        "tests": {
          "hasErrorHandling": true,
          "hasLogging": true,
          "hasValidation": false,
          "hasRetryLogic": true,
          "hasRateLimiting": false,
          "hasAuthentication": true,
          "hasDocumentation": true
        },
        "issues": [
          "Missing validation",
          "Missing ratelimiting"
        ],
        "score": 71
      },
      {
        "file": "services\\nflDataExpansion.ts",
        "tests": {
          "hasErrorHandling": false,
          "hasLogging": false,
          "hasValidation": false,
          "hasRetryLogic": false,
          "hasRateLimiting": false,
          "hasAuthentication": false,
          "hasDocumentation": true
        },
        "issues": [
          "Missing errorhandling",
          "Missing logging",
          "Missing validation",
          "Missing retrylogic",
          "Missing ratelimiting",
          "Missing authentication"
        ],
        "score": 14
      },
      {
        "file": "services\\notificationService.ts",
        "tests": {
          "hasErrorHandling": true,
          "hasLogging": true,
          "hasValidation": false,
          "hasRetryLogic": false,
          "hasRateLimiting": false,
          "hasAuthentication": false,
          "hasDocumentation": true
        },
        "issues": [
          "Missing validation",
          "Missing retrylogic",
          "Missing ratelimiting",
          "Missing authentication"
        ],
        "score": 43
      },
      {
        "file": "services\\oauthService.ts",
        "tests": {
          "hasErrorHandling": true,
          "hasLogging": true,
          "hasValidation": false,
          "hasRetryLogic": false,
          "hasRateLimiting": false,
          "hasAuthentication": true,
          "hasDocumentation": true
        },
        "issues": [
          "Missing validation",
          "Missing retrylogic",
          "Missing ratelimiting"
        ],
        "score": 57
      },
      {
        "file": "services\\optimizedOracleQueries.ts",
        "tests": {
          "hasErrorHandling": true,
          "hasLogging": true,
          "hasValidation": true,
          "hasRetryLogic": false,
          "hasRateLimiting": false,
          "hasAuthentication": false,
          "hasDocumentation": true
        },
        "issues": [
          "Missing retrylogic",
          "Missing ratelimiting",
          "Missing authentication"
        ],
        "score": 57
      },
      {
        "file": "services\\oracleAccuracyEnhancementService.ts",
        "tests": {
          "hasErrorHandling": false,
          "hasLogging": false,
          "hasValidation": false,
          "hasRetryLogic": false,
          "hasRateLimiting": false,
          "hasAuthentication": false,
          "hasDocumentation": false
        },
        "issues": [
          "Missing errorhandling",
          "Missing logging",
          "Missing validation",
          "Missing retrylogic",
          "Missing ratelimiting",
          "Missing authentication",
          "Missing documentation"
        ],
        "score": 0
      },
      {
        "file": "services\\oracleAdvancedAnalyticsService.ts",
        "tests": {
          "hasErrorHandling": true,
          "hasLogging": false,
          "hasValidation": false,
          "hasRetryLogic": false,
          "hasRateLimiting": false,
          "hasAuthentication": false,
          "hasDocumentation": true
        },
        "issues": [
          "Missing logging",
          "Missing validation",
          "Missing retrylogic",
          "Missing ratelimiting",
          "Missing authentication"
        ],
        "score": 29
      },
      {
        "file": "services\\oracleAnalyticsService.ts",
        "tests": {
          "hasErrorHandling": true,
          "hasLogging": true,
          "hasValidation": false,
          "hasRetryLogic": false,
          "hasRateLimiting": false,
          "hasAuthentication": false,
          "hasDocumentation": true
        },
        "issues": [
          "Missing validation",
          "Missing retrylogic",
          "Missing ratelimiting",
          "Missing authentication"
        ],
        "score": 43
      },
      {
        "file": "services\\oracleApiClient.ts",
        "tests": {
          "hasErrorHandling": true,
          "hasLogging": true,
          "hasValidation": false,
          "hasRetryLogic": false,
          "hasRateLimiting": false,
          "hasAuthentication": true,
          "hasDocumentation": true
        },
        "issues": [
          "Missing validation",
          "Missing retrylogic",
          "Missing ratelimiting"
        ],
        "score": 57
      },
      {
        "file": "services\\oracleCacheIntegrationService.ts",
        "tests": {
          "hasErrorHandling": false,
          "hasLogging": false,
          "hasValidation": false,
          "hasRetryLogic": false,
          "hasRateLimiting": false,
          "hasAuthentication": false,
          "hasDocumentation": false
        },
        "issues": [
          "Missing errorhandling",
          "Missing logging",
          "Missing validation",
          "Missing retrylogic",
          "Missing ratelimiting",
          "Missing authentication",
          "Missing documentation"
        ],
        "score": 0
      },
      {
        "file": "services\\oracleCollaborativeService.ts",
        "tests": {
          "hasErrorHandling": false,
          "hasLogging": false,
          "hasValidation": false,
          "hasRetryLogic": false,
          "hasRateLimiting": false,
          "hasAuthentication": false,
          "hasDocumentation": false
        },
        "issues": [
          "Missing errorhandling",
          "Missing logging",
          "Missing validation",
          "Missing retrylogic",
          "Missing ratelimiting",
          "Missing authentication",
          "Missing documentation"
        ],
        "score": 0
      },
      {
        "file": "services\\oracleDatabaseOptimizationService.ts",
        "tests": {
          "hasErrorHandling": false,
          "hasLogging": false,
          "hasValidation": false,
          "hasRetryLogic": false,
          "hasRateLimiting": false,
          "hasAuthentication": false,
          "hasDocumentation": false
        },
        "issues": [
          "Missing errorhandling",
          "Missing logging",
          "Missing validation",
          "Missing retrylogic",
          "Missing ratelimiting",
          "Missing authentication",
          "Missing documentation"
        ],
        "score": 0
      },
      {
        "file": "services\\oracleEducationService.ts",
        "tests": {
          "hasErrorHandling": true,
          "hasLogging": true,
          "hasValidation": false,
          "hasRetryLogic": true,
          "hasRateLimiting": false,
          "hasAuthentication": true,
          "hasDocumentation": true
        },
        "issues": [
          "Missing validation",
          "Missing ratelimiting"
        ],
        "score": 71
      },
      {
        "file": "services\\oracleEnsembleMachineLearningService.ts",
        "tests": {
          "hasErrorHandling": false,
          "hasLogging": false,
          "hasValidation": false,
          "hasRetryLogic": false,
          "hasRateLimiting": false,
          "hasAuthentication": false,
          "hasDocumentation": false
        },
        "issues": [
          "Missing errorhandling",
          "Missing logging",
          "Missing validation",
          "Missing retrylogic",
          "Missing ratelimiting",
          "Missing authentication",
          "Missing documentation"
        ],
        "score": 0
      },
      {
        "file": "services\\oracleHistoricalAnalyticsService.ts",
        "tests": {
          "hasErrorHandling": false,
          "hasLogging": false,
          "hasValidation": false,
          "hasRetryLogic": false,
          "hasRateLimiting": false,
          "hasAuthentication": false,
          "hasDocumentation": false
        },
        "issues": [
          "Missing errorhandling",
          "Missing logging",
          "Missing validation",
          "Missing retrylogic",
          "Missing ratelimiting",
          "Missing authentication",
          "Missing documentation"
        ],
        "score": 0
      },
      {
        "file": "services\\oracleIntelligentCachingService.ts",
        "tests": {
          "hasErrorHandling": false,
          "hasLogging": false,
          "hasValidation": false,
          "hasRetryLogic": false,
          "hasRateLimiting": false,
          "hasAuthentication": false,
          "hasDocumentation": false
        },
        "issues": [
          "Missing errorhandling",
          "Missing logging",
          "Missing validation",
          "Missing retrylogic",
          "Missing ratelimiting",
          "Missing authentication",
          "Missing documentation"
        ],
        "score": 0
      },
      {
        "file": "services\\oracleLiveDataIntegrationService.ts",
        "tests": {
          "hasErrorHandling": true,
          "hasLogging": true,
          "hasValidation": false,
          "hasRetryLogic": false,
          "hasRateLimiting": false,
          "hasAuthentication": false,
          "hasDocumentation": true
        },
        "issues": [
          "Missing validation",
          "Missing retrylogic",
          "Missing ratelimiting",
          "Missing authentication"
        ],
        "score": 43
      },
      {
        "file": "services\\oracleMachineLearningService.ts",
        "tests": {
          "hasErrorHandling": true,
          "hasLogging": true,
          "hasValidation": false,
          "hasRetryLogic": false,
          "hasRateLimiting": false,
          "hasAuthentication": false,
          "hasDocumentation": true
        },
        "issues": [
          "Missing validation",
          "Missing retrylogic",
          "Missing ratelimiting",
          "Missing authentication"
        ],
        "score": 43
      },
      {
        "file": "services\\oracleMobileService.ts",
        "tests": {
          "hasErrorHandling": false,
          "hasLogging": false,
          "hasValidation": false,
          "hasRetryLogic": false,
          "hasRateLimiting": false,
          "hasAuthentication": false,
          "hasDocumentation": false
        },
        "issues": [
          "Missing errorhandling",
          "Missing logging",
          "Missing validation",
          "Missing retrylogic",
          "Missing ratelimiting",
          "Missing authentication",
          "Missing documentation"
        ],
        "score": 0
      },
      {
        "file": "services\\oraclePerformanceCacheService.ts",
        "tests": {
          "hasErrorHandling": false,
          "hasLogging": false,
          "hasValidation": false,
          "hasRetryLogic": false,
          "hasRateLimiting": false,
          "hasAuthentication": false,
          "hasDocumentation": false
        },
        "issues": [
          "Missing errorhandling",
          "Missing logging",
          "Missing validation",
          "Missing retrylogic",
          "Missing ratelimiting",
          "Missing authentication",
          "Missing documentation"
        ],
        "score": 0
      },
      {
        "file": "services\\oraclePerformanceIndex.ts",
        "tests": {
          "hasErrorHandling": true,
          "hasLogging": true,
          "hasValidation": false,
          "hasRetryLogic": false,
          "hasRateLimiting": false,
          "hasAuthentication": false,
          "hasDocumentation": true
        },
        "issues": [
          "Missing validation",
          "Missing retrylogic",
          "Missing ratelimiting",
          "Missing authentication"
        ],
        "score": 43
      },
      {
        "file": "services\\oraclePerformanceOptimizationService.ts",
        "tests": {
          "hasErrorHandling": true,
          "hasLogging": true,
          "hasValidation": false,
          "hasRetryLogic": true,
          "hasRateLimiting": false,
          "hasAuthentication": false,
          "hasDocumentation": true
        },
        "issues": [
          "Missing validation",
          "Missing ratelimiting",
          "Missing authentication"
        ],
        "score": 57
      },
      {
        "file": "services\\oraclePerformanceService.ts",
        "tests": {
          "hasErrorHandling": false,
          "hasLogging": false,
          "hasValidation": false,
          "hasRetryLogic": false,
          "hasRateLimiting": false,
          "hasAuthentication": false,
          "hasDocumentation": false
        },
        "issues": [
          "Missing errorhandling",
          "Missing logging",
          "Missing validation",
          "Missing retrylogic",
          "Missing ratelimiting",
          "Missing authentication",
          "Missing documentation"
        ],
        "score": 0
      },
      {
        "file": "services\\oraclePredictionService.ts",
        "tests": {
          "hasErrorHandling": false,
          "hasLogging": false,
          "hasValidation": false,
          "hasRetryLogic": false,
          "hasRateLimiting": false,
          "hasAuthentication": false,
          "hasDocumentation": false
        },
        "issues": [
          "Missing errorhandling",
          "Missing logging",
          "Missing validation",
          "Missing retrylogic",
          "Missing ratelimiting",
          "Missing authentication",
          "Missing documentation"
        ],
        "score": 0
      },
      {
        "file": "services\\oracleRealTimeBridge.ts",
        "tests": {
          "hasErrorHandling": false,
          "hasLogging": false,
          "hasValidation": false,
          "hasRetryLogic": false,
          "hasRateLimiting": false,
          "hasAuthentication": false,
          "hasDocumentation": false
        },
        "issues": [
          "Missing errorhandling",
          "Missing logging",
          "Missing validation",
          "Missing retrylogic",
          "Missing ratelimiting",
          "Missing authentication",
          "Missing documentation"
        ],
        "score": 0
      },
      {
        "file": "services\\oracleRewardsService.ts",
        "tests": {
          "hasErrorHandling": true,
          "hasLogging": true,
          "hasValidation": false,
          "hasRetryLogic": false,
          "hasRateLimiting": false,
          "hasAuthentication": false,
          "hasDocumentation": true
        },
        "issues": [
          "Missing validation",
          "Missing retrylogic",
          "Missing ratelimiting",
          "Missing authentication"
        ],
        "score": 43
      },
      {
        "file": "services\\oracleScoringService.ts",
        "tests": {
          "hasErrorHandling": false,
          "hasLogging": false,
          "hasValidation": false,
          "hasRetryLogic": false,
          "hasRateLimiting": false,
          "hasAuthentication": false,
          "hasDocumentation": true
        },
        "issues": [
          "Missing errorhandling",
          "Missing logging",
          "Missing validation",
          "Missing retrylogic",
          "Missing ratelimiting",
          "Missing authentication"
        ],
        "score": 14
      },
      {
        "file": "services\\oracleSocialService.ts",
        "tests": {
          "hasErrorHandling": true,
          "hasLogging": true,
          "hasValidation": false,
          "hasRetryLogic": false,
          "hasRateLimiting": false,
          "hasAuthentication": false,
          "hasDocumentation": true
        },
        "issues": [
          "Missing validation",
          "Missing retrylogic",
          "Missing ratelimiting",
          "Missing authentication"
        ],
        "score": 43
      },
      {
        "file": "services\\oracleUserDashboardService.ts",
        "tests": {
          "hasErrorHandling": false,
          "hasLogging": false,
          "hasValidation": false,
          "hasRetryLogic": false,
          "hasRateLimiting": false,
          "hasAuthentication": false,
          "hasDocumentation": false
        },
        "issues": [
          "Missing errorhandling",
          "Missing logging",
          "Missing validation",
          "Missing retrylogic",
          "Missing ratelimiting",
          "Missing authentication",
          "Missing documentation"
        ],
        "score": 0
      },
      {
        "file": "services\\paymentService.ts",
        "tests": {
          "hasErrorHandling": true,
          "hasLogging": true,
          "hasValidation": false,
          "hasRetryLogic": false,
          "hasRateLimiting": false,
          "hasAuthentication": false,
          "hasDocumentation": true
        },
        "issues": [
          "Missing validation",
          "Missing retrylogic",
          "Missing ratelimiting",
          "Missing authentication"
        ],
        "score": 43
      },
      {
        "file": "services\\performanceMonitor.ts",
        "tests": {
          "hasErrorHandling": true,
          "hasLogging": true,
          "hasValidation": false,
          "hasRetryLogic": false,
          "hasRateLimiting": false,
          "hasAuthentication": false,
          "hasDocumentation": false
        },
        "issues": [
          "Missing validation",
          "Missing retrylogic",
          "Missing ratelimiting",
          "Missing authentication",
          "Missing documentation"
        ],
        "score": 29
      },
      {
        "file": "services\\performanceMonitoringService.ts",
        "tests": {
          "hasErrorHandling": true,
          "hasLogging": true,
          "hasValidation": false,
          "hasRetryLogic": false,
          "hasRateLimiting": false,
          "hasAuthentication": false,
          "hasDocumentation": true
        },
        "issues": [
          "Missing validation",
          "Missing retrylogic",
          "Missing ratelimiting",
          "Missing authentication"
        ],
        "score": 43
      },
      {
        "file": "services\\playerComparisonService.ts",
        "tests": {
          "hasErrorHandling": true,
          "hasLogging": true,
          "hasValidation": false,
          "hasRetryLogic": false,
          "hasRateLimiting": false,
          "hasAuthentication": false,
          "hasDocumentation": true
        },
        "issues": [
          "Missing validation",
          "Missing retrylogic",
          "Missing ratelimiting",
          "Missing authentication"
        ],
        "score": 43
      },
      {
        "file": "services\\playerCorrelationOptimizationEngine.ts",
        "tests": {
          "hasErrorHandling": true,
          "hasLogging": true,
          "hasValidation": false,
          "hasRetryLogic": false,
          "hasRateLimiting": false,
          "hasAuthentication": false,
          "hasDocumentation": true
        },
        "issues": [
          "Missing validation",
          "Missing retrylogic",
          "Missing ratelimiting",
          "Missing authentication"
        ],
        "score": 43
      },
      {
        "file": "services\\playerResearchService.ts",
        "tests": {
          "hasErrorHandling": true,
          "hasLogging": true,
          "hasValidation": false,
          "hasRetryLogic": false,
          "hasRateLimiting": false,
          "hasAuthentication": true,
          "hasDocumentation": true
        },
        "issues": [
          "Missing validation",
          "Missing retrylogic",
          "Missing ratelimiting"
        ],
        "score": 57
      },
      {
        "file": "services\\premiumFeatureService.ts",
        "tests": {
          "hasErrorHandling": true,
          "hasLogging": true,
          "hasValidation": false,
          "hasRetryLogic": false,
          "hasRateLimiting": false,
          "hasAuthentication": false,
          "hasDocumentation": true
        },
        "issues": [
          "Missing validation",
          "Missing retrylogic",
          "Missing ratelimiting",
          "Missing authentication"
        ],
        "score": 43
      },
      {
        "file": "services\\productionOraclePredictionService.ts",
        "tests": {
          "hasErrorHandling": true,
          "hasLogging": true,
          "hasValidation": false,
          "hasRetryLogic": false,
          "hasRateLimiting": false,
          "hasAuthentication": false,
          "hasDocumentation": true
        },
        "issues": [
          "Missing validation",
          "Missing retrylogic",
          "Missing ratelimiting",
          "Missing authentication"
        ],
        "score": 43
      },
      {
        "file": "services\\productionSportsDataService.ts",
        "tests": {
          "hasErrorHandling": true,
          "hasLogging": true,
          "hasValidation": false,
          "hasRetryLogic": false,
          "hasRateLimiting": true,
          "hasAuthentication": false,
          "hasDocumentation": true
        },
        "issues": [
          "Missing validation",
          "Missing retrylogic",
          "Missing authentication"
        ],
        "score": 57
      },
      {
        "file": "services\\productionSportsDataServiceSecure.ts",
        "tests": {
          "hasErrorHandling": true,
          "hasLogging": true,
          "hasValidation": false,
          "hasRetryLogic": false,
          "hasRateLimiting": false,
          "hasAuthentication": false,
          "hasDocumentation": true
        },
        "issues": [
          "Missing validation",
          "Missing retrylogic",
          "Missing ratelimiting",
          "Missing authentication"
        ],
        "score": 43
      },
      {
        "file": "services\\pushNotificationService.ts",
        "tests": {
          "hasErrorHandling": true,
          "hasLogging": true,
          "hasValidation": false,
          "hasRetryLogic": false,
          "hasRateLimiting": false,
          "hasAuthentication": true,
          "hasDocumentation": true
        },
        "issues": [
          "Missing validation",
          "Missing retrylogic",
          "Missing ratelimiting"
        ],
        "score": 57
      },
      {
        "file": "services\\rbacService.ts",
        "tests": {
          "hasErrorHandling": false,
          "hasLogging": false,
          "hasValidation": false,
          "hasRetryLogic": false,
          "hasRateLimiting": false,
          "hasAuthentication": false,
          "hasDocumentation": true
        },
        "issues": [
          "Missing errorhandling",
          "Missing logging",
          "Missing validation",
          "Missing retrylogic",
          "Missing ratelimiting",
          "Missing authentication"
        ],
        "score": 14
      },
      {
        "file": "services\\realTimeDataPipeline.ts",
        "tests": {
          "hasErrorHandling": true,
          "hasLogging": true,
          "hasValidation": true,
          "hasRetryLogic": true,
          "hasRateLimiting": true,
          "hasAuthentication": true,
          "hasDocumentation": true
        },
        "issues": [],
        "score": 100
      },
      {
        "file": "services\\realTimeDataService.ts",
        "tests": {
          "hasErrorHandling": true,
          "hasLogging": true,
          "hasValidation": false,
          "hasRetryLogic": false,
          "hasRateLimiting": false,
          "hasAuthentication": false,
          "hasDocumentation": true
        },
        "issues": [
          "Missing validation",
          "Missing retrylogic",
          "Missing ratelimiting",
          "Missing authentication"
        ],
        "score": 43
      },
      {
        "file": "services\\realTimeDataServiceV2.ts",
        "tests": {
          "hasErrorHandling": true,
          "hasLogging": true,
          "hasValidation": false,
          "hasRetryLogic": false,
          "hasRateLimiting": false,
          "hasAuthentication": false,
          "hasDocumentation": true
        },
        "issues": [
          "Missing validation",
          "Missing retrylogic",
          "Missing ratelimiting",
          "Missing authentication"
        ],
        "score": 43
      },
      {
        "file": "services\\realTimeDraftService.ts",
        "tests": {
          "hasErrorHandling": true,
          "hasLogging": true,
          "hasValidation": false,
          "hasRetryLogic": true,
          "hasRateLimiting": false,
          "hasAuthentication": true,
          "hasDocumentation": true
        },
        "issues": [
          "Missing validation",
          "Missing ratelimiting"
        ],
        "score": 71
      },
      {
        "file": "services\\realTimeDraftServiceV2.ts",
        "tests": {
          "hasErrorHandling": true,
          "hasLogging": true,
          "hasValidation": false,
          "hasRetryLogic": false,
          "hasRateLimiting": false,
          "hasAuthentication": true,
          "hasDocumentation": true
        },
        "issues": [
          "Missing validation",
          "Missing retrylogic",
          "Missing ratelimiting"
        ],
        "score": 57
      },
      {
        "file": "services\\realTimeNflDataService.ts",
        "tests": {
          "hasErrorHandling": true,
          "hasLogging": true,
          "hasValidation": false,
          "hasRetryLogic": false,
          "hasRateLimiting": false,
          "hasAuthentication": false,
          "hasDocumentation": true
        },
        "issues": [
          "Missing validation",
          "Missing retrylogic",
          "Missing ratelimiting",
          "Missing authentication"
        ],
        "score": 43
      },
      {
        "file": "services\\realtimeNotificationService.ts",
        "tests": {
          "hasErrorHandling": true,
          "hasLogging": true,
          "hasValidation": false,
          "hasRetryLogic": true,
          "hasRateLimiting": false,
          "hasAuthentication": true,
          "hasDocumentation": true
        },
        "issues": [
          "Missing validation",
          "Missing ratelimiting"
        ],
        "score": 71
      },
      {
        "file": "services\\realtimeNotificationServiceV2.ts",
        "tests": {
          "hasErrorHandling": true,
          "hasLogging": true,
          "hasValidation": false,
          "hasRetryLogic": false,
          "hasRateLimiting": false,
          "hasAuthentication": true,
          "hasDocumentation": true
        },
        "issues": [
          "Missing validation",
          "Missing retrylogic",
          "Missing ratelimiting"
        ],
        "score": 57
      },
      {
        "file": "services\\realTimeStrategyAdjustmentService.ts",
        "tests": {
          "hasErrorHandling": false,
          "hasLogging": false,
          "hasValidation": false,
          "hasRetryLogic": false,
          "hasRateLimiting": false,
          "hasAuthentication": false,
          "hasDocumentation": true
        },
        "issues": [
          "Missing errorhandling",
          "Missing logging",
          "Missing validation",
          "Missing retrylogic",
          "Missing ratelimiting",
          "Missing authentication"
        ],
        "score": 14
      },
      {
        "file": "services\\scheduleGeneratorService.ts",
        "tests": {
          "hasErrorHandling": false,
          "hasLogging": false,
          "hasValidation": true,
          "hasRetryLogic": false,
          "hasRateLimiting": false,
          "hasAuthentication": false,
          "hasDocumentation": true
        },
        "issues": [
          "Missing errorhandling",
          "Missing logging",
          "Missing retrylogic",
          "Missing ratelimiting",
          "Missing authentication"
        ],
        "score": 29
      },
      {
        "file": "services\\seasonalTrendsAnalysisService.ts",
        "tests": {
          "hasErrorHandling": true,
          "hasLogging": true,
          "hasValidation": false,
          "hasRetryLogic": false,
          "hasRateLimiting": false,
          "hasAuthentication": false,
          "hasDocumentation": true
        },
        "issues": [
          "Missing validation",
          "Missing retrylogic",
          "Missing ratelimiting",
          "Missing authentication"
        ],
        "score": 43
      },
      {
        "file": "services\\seasonContestService.ts",
        "tests": {
          "hasErrorHandling": false,
          "hasLogging": false,
          "hasValidation": false,
          "hasRetryLogic": false,
          "hasRateLimiting": false,
          "hasAuthentication": false,
          "hasDocumentation": true
        },
        "issues": [
          "Missing errorhandling",
          "Missing logging",
          "Missing validation",
          "Missing retrylogic",
          "Missing ratelimiting",
          "Missing authentication"
        ],
        "score": 14
      },
      {
        "file": "services\\seasonSyncService.ts",
        "tests": {
          "hasErrorHandling": false,
          "hasLogging": true,
          "hasValidation": false,
          "hasRetryLogic": false,
          "hasRateLimiting": false,
          "hasAuthentication": false,
          "hasDocumentation": true
        },
        "issues": [
          "Missing errorhandling",
          "Missing validation",
          "Missing retrylogic",
          "Missing ratelimiting",
          "Missing authentication"
        ],
        "score": 29
      },
      {
        "file": "services\\secureApiClient.ts",
        "tests": {
          "hasErrorHandling": true,
          "hasLogging": true,
          "hasValidation": false,
          "hasRetryLogic": false,
          "hasRateLimiting": false,
          "hasAuthentication": true,
          "hasDocumentation": true
        },
        "issues": [
          "Missing validation",
          "Missing retrylogic",
          "Missing ratelimiting"
        ],
        "score": 57
      },
      {
        "file": "services\\simpleAuthService.ts",
        "tests": {
          "hasErrorHandling": true,
          "hasLogging": true,
          "hasValidation": true,
          "hasRetryLogic": false,
          "hasRateLimiting": false,
          "hasAuthentication": true,
          "hasDocumentation": true
        },
        "issues": [
          "Missing retrylogic",
          "Missing ratelimiting"
        ],
        "score": 71
      },
      {
        "file": "services\\socialInteractionService.ts",
        "tests": {
          "hasErrorHandling": false,
          "hasLogging": false,
          "hasValidation": false,
          "hasRetryLogic": false,
          "hasRateLimiting": false,
          "hasAuthentication": true,
          "hasDocumentation": false
        },
        "issues": [
          "Missing errorhandling",
          "Missing logging",
          "Missing validation",
          "Missing retrylogic",
          "Missing ratelimiting",
          "Missing documentation"
        ],
        "score": 14
      },
      {
        "file": "services\\soundService.ts",
        "tests": {
          "hasErrorHandling": true,
          "hasLogging": true,
          "hasValidation": false,
          "hasRetryLogic": true,
          "hasRateLimiting": false,
          "hasAuthentication": false,
          "hasDocumentation": true
        },
        "issues": [
          "Missing validation",
          "Missing ratelimiting",
          "Missing authentication"
        ],
        "score": 57
      },
      {
        "file": "services\\sportsIOPlayerService.ts",
        "tests": {
          "hasErrorHandling": true,
          "hasLogging": true,
          "hasValidation": false,
          "hasRetryLogic": false,
          "hasRateLimiting": false,
          "hasAuthentication": false,
          "hasDocumentation": true
        },
        "issues": [
          "Missing validation",
          "Missing retrylogic",
          "Missing ratelimiting",
          "Missing authentication"
        ],
        "score": 43
      },
      {
        "file": "services\\tradeAnalysisEngine.ts",
        "tests": {
          "hasErrorHandling": false,
          "hasLogging": true,
          "hasValidation": false,
          "hasRetryLogic": false,
          "hasRateLimiting": false,
          "hasAuthentication": false,
          "hasDocumentation": true
        },
        "issues": [
          "Missing errorhandling",
          "Missing validation",
          "Missing retrylogic",
          "Missing ratelimiting",
          "Missing authentication"
        ],
        "score": 29
      },
      {
        "file": "services\\tradeAnalysisService.ts",
        "tests": {
          "hasErrorHandling": true,
          "hasLogging": true,
          "hasValidation": false,
          "hasRetryLogic": false,
          "hasRateLimiting": false,
          "hasAuthentication": false,
          "hasDocumentation": true
        },
        "issues": [
          "Missing validation",
          "Missing retrylogic",
          "Missing ratelimiting",
          "Missing authentication"
        ],
        "score": 43
      },
      {
        "file": "services\\waiverWireAnalyzer.ts",
        "tests": {
          "hasErrorHandling": false,
          "hasLogging": false,
          "hasValidation": false,
          "hasRetryLogic": false,
          "hasRateLimiting": false,
          "hasAuthentication": false,
          "hasDocumentation": true
        },
        "issues": [
          "Missing errorhandling",
          "Missing logging",
          "Missing validation",
          "Missing retrylogic",
          "Missing ratelimiting",
          "Missing authentication"
        ],
        "score": 14
      },
      {
        "file": "services\\waiverWireEngine.ts",
        "tests": {
          "hasErrorHandling": false,
          "hasLogging": false,
          "hasValidation": false,
          "hasRetryLogic": false,
          "hasRateLimiting": false,
          "hasAuthentication": false,
          "hasDocumentation": true
        },
        "issues": [
          "Missing errorhandling",
          "Missing logging",
          "Missing validation",
          "Missing retrylogic",
          "Missing ratelimiting",
          "Missing authentication"
        ],
        "score": 14
      },
      {
        "file": "services\\websocketService.ts",
        "tests": {
          "hasErrorHandling": true,
          "hasLogging": true,
          "hasValidation": false,
          "hasRetryLogic": true,
          "hasRateLimiting": false,
          "hasAuthentication": false,
          "hasDocumentation": true
        },
        "issues": [
          "Missing validation",
          "Missing ratelimiting",
          "Missing authentication"
        ],
        "score": 57
      },
      {
        "file": "services\\zeroErrorMonitor.ts",
        "tests": {
          "hasErrorHandling": false,
          "hasLogging": true,
          "hasValidation": true,
          "hasRetryLogic": false,
          "hasRateLimiting": false,
          "hasAuthentication": false,
          "hasDocumentation": true
        },
        "issues": [
          "Missing errorhandling",
          "Missing retrylogic",
          "Missing ratelimiting",
          "Missing authentication"
        ],
        "score": 43
      }
    ],
    "errors": [
      {
        "name": "Global Error Handler",
        "score": 85,
        "issues": []
      },
      {
        "name": "Network Failures",
        "score": 75,
        "issues": [
          "Add offline support"
        ]
      },
      {
        "name": "Input Validation",
        "score": 90,
        "issues": []
      },
      {
        "name": "Boundary Conditions",
        "score": 80,
        "issues": []
      },
      {
        "name": "Concurrency",
        "score": 70,
        "issues": [
          "Race condition protection needed"
        ]
      },
      {
        "name": "Memory Leaks",
        "score": 85,
        "issues": []
      },
      {
        "name": "Security",
        "score": 95,
        "issues": []
      }
    ],
    "summary": {}
  },
  "fixes": [
    {
      "category": "accessibility",
      "issues": [
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support",
        "Poor accessibility support"
      ],
      "fix": "Add ARIA labels and semantic HTML elements"
    },
    {
      "category": "performance",
      "issues": [
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states",
        "Missing loading states"
      ],
      "fix": "Implement React.memo, useMemo, and code splitting"
    },
    {
      "category": "errorHandling",
      "issues": [
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing error boundary",
        "Missing errorhandling",
        "Missing errorhandling",
        "Missing errorhandling",
        "Missing errorhandling",
        "Missing errorhandling",
        "Missing errorhandling",
        "Missing errorhandling",
        "Missing errorhandling",
        "Missing errorhandling",
        "Missing errorhandling",
        "Missing errorhandling",
        "Missing errorhandling",
        "Missing errorhandling",
        "Missing errorhandling",
        "Missing errorhandling",
        "Missing errorhandling",
        "Missing errorhandling",
        "Missing errorhandling",
        "Missing errorhandling",
        "Missing errorhandling",
        "Missing errorhandling",
        "Missing errorhandling",
        "Missing errorhandling",
        "Missing errorhandling",
        "Missing errorhandling",
        "Missing errorhandling",
        "Missing errorhandling",
        "Missing errorhandling",
        "Missing errorhandling",
        "Missing errorhandling",
        "Missing errorhandling",
        "Missing errorhandling",
        "Missing errorhandling",
        "Missing errorhandling",
        "Missing errorhandling",
        "Missing errorhandling",
        "Missing errorhandling",
        "Missing errorhandling",
        "Missing errorhandling",
        "Missing errorhandling",
        "Missing errorhandling",
        "Missing errorhandling",
        "Missing errorhandling",
        "Missing errorhandling"
      ],
      "fix": "Add try-catch blocks and error boundaries"
    },
    {
      "category": "mobile",
      "issues": [
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support",
        "Limited mobile support"
      ],
      "fix": "Add responsive design and touch event handlers"
    },
    {
      "category": "security",
      "issues": [
        "Missing validation",
        "Missing validation",
        "Missing validation",
        "Missing validation",
        "Missing validation",
        "Missing validation",
        "Missing validation",
        "Missing validation",
        "Missing validation",
        "Missing validation",
        "Missing validation",
        "Missing validation",
        "Missing validation",
        "Missing validation",
        "Missing validation",
        "Missing validation",
        "Missing validation",
        "Missing validation",
        "Missing validation",
        "Missing validation",
        "Missing validation",
        "Missing validation",
        "Missing validation",
        "Missing validation",
        "Missing validation",
        "Missing validation",
        "Missing validation",
        "Missing validation",
        "Missing validation",
        "Missing validation",
        "Missing validation",
        "Missing validation",
        "Missing validation",
        "Missing validation",
        "Missing validation",
        "Missing validation",
        "Missing validation",
        "Missing validation",
        "Missing validation",
        "Missing validation",
        "Missing validation",
        "Missing validation",
        "Missing validation",
        "Missing validation",
        "Missing validation",
        "Missing validation",
        "Missing validation",
        "Missing validation",
        "Missing validation",
        "Missing validation",
        "Missing validation",
        "Missing validation",
        "Missing validation",
        "Missing validation",
        "Missing validation",
        "Missing validation",
        "Missing validation",
        "Missing validation",
        "Missing validation",
        "Missing validation",
        "Missing validation",
        "Missing validation",
        "Missing validation",
        "Missing validation",
        "Missing validation",
        "Missing validation",
        "Missing validation",
        "Missing validation",
        "Missing validation",
        "Missing validation",
        "Missing validation",
        "Missing validation",
        "Missing validation",
        "Missing validation",
        "Missing validation",
        "Missing validation",
        "Missing validation",
        "Missing validation",
        "Missing validation",
        "Missing validation",
        "Missing validation",
        "Missing validation",
        "Missing validation",
        "Missing validation",
        "Missing validation",
        "Missing validation",
        "Missing validation",
        "Missing validation",
        "Missing validation",
        "Missing validation",
        "Missing validation",
        "Missing validation",
        "Missing validation",
        "Missing validation",
        "Missing validation",
        "Missing validation",
        "Missing validation",
        "Missing validation",
        "Missing validation",
        "Missing validation",
        "Missing validation",
        "Missing validation",
        "Missing validation",
        "Missing validation",
        "Missing validation",
        "Missing validation",
        "Missing validation",
        "Missing validation"
      ],
      "fix": "Implement input validation and sanitization"
    },
    {
      "category": "documentation",
      "issues": [
        "Missing retrylogic",
        "Missing ratelimiting",
        "Missing authentication",
        "Missing retrylogic",
        "Missing ratelimiting",
        "Missing logging",
        "Missing retrylogic",
        "Missing ratelimiting",
        "Missing authentication",
        "Missing retrylogic",
        "Missing ratelimiting",
        "Missing authentication",
        "Missing logging",
        "Missing retrylogic",
        "Missing ratelimiting",
        "Missing authentication",
        "Missing retrylogic",
        "Missing ratelimiting",
        "Missing authentication",
        "Missing retrylogic",
        "Missing ratelimiting",
        "Missing authentication",
        "Missing logging",
        "Missing retrylogic",
        "Missing ratelimiting",
        "Missing authentication",
        "Missing documentation",
        "Missing logging",
        "Missing retrylogic",
        "Missing ratelimiting",
        "Missing authentication",
        "Missing retrylogic",
        "Missing ratelimiting",
        "Missing logging",
        "Missing retrylogic",
        "Missing ratelimiting",
        "Missing authentication",
        "Missing retrylogic",
        "Missing ratelimiting",
        "Missing authentication",
        "Missing logging",
        "Missing retrylogic",
        "Missing ratelimiting",
        "Missing authentication",
        "Missing retrylogic",
        "Missing ratelimiting",
        "Missing authentication",
        "Missing retrylogic",
        "Missing ratelimiting",
        "Missing retrylogic",
        "Missing ratelimiting",
        "Missing retrylogic",
        "Missing ratelimiting",
        "Missing authentication",
        "Missing retrylogic",
        "Missing ratelimiting",
        "Missing authentication",
        "Missing logging",
        "Missing retrylogic",
        "Missing ratelimiting",
        "Missing authentication",
        "Missing retrylogic",
        "Missing ratelimiting",
        "Missing authentication",
        "Missing retrylogic",
        "Missing ratelimiting",
        "Missing authentication",
        "Missing ratelimiting",
        "Missing authentication",
        "Missing retrylogic",
        "Missing ratelimiting",
        "Missing authentication",
        "Missing retrylogic",
        "Missing ratelimiting",
        "Missing retrylogic",
        "Missing ratelimiting",
        "Missing retrylogic",
        "Missing ratelimiting",
        "Missing authentication",
        "Missing retrylogic",
        "Missing ratelimiting",
        "Missing authentication",
        "Missing ratelimiting",
        "Missing authentication",
        "Missing logging",
        "Missing retrylogic",
        "Missing ratelimiting",
        "Missing authentication",
        "Missing ratelimiting",
        "Missing retrylogic",
        "Missing ratelimiting",
        "Missing authentication",
        "Missing retrylogic",
        "Missing ratelimiting",
        "Missing authentication",
        "Missing logging",
        "Missing retrylogic",
        "Missing ratelimiting",
        "Missing authentication",
        "Missing ratelimiting",
        "Missing authentication",
        "Missing retrylogic",
        "Missing ratelimiting",
        "Missing retrylogic",
        "Missing ratelimiting",
        "Missing logging",
        "Missing retrylogic",
        "Missing ratelimiting",
        "Missing authentication",
        "Missing documentation",
        "Missing ratelimiting",
        "Missing retrylogic",
        "Missing ratelimiting",
        "Missing authentication",
        "Missing retrylogic",
        "Missing ratelimiting",
        "Missing authentication",
        "Missing logging",
        "Missing retrylogic",
        "Missing ratelimiting",
        "Missing authentication",
        "Missing retrylogic",
        "Missing ratelimiting",
        "Missing authentication",
        "Missing retrylogic",
        "Missing ratelimiting",
        "Missing authentication",
        "Missing logging",
        "Missing retrylogic",
        "Missing ratelimiting",
        "Missing authentication",
        "Missing logging",
        "Missing retrylogic",
        "Missing ratelimiting",
        "Missing authentication",
        "Missing retrylogic",
        "Missing ratelimiting",
        "Missing authentication",
        "Missing ratelimiting",
        "Missing authentication",
        "Missing retrylogic",
        "Missing ratelimiting",
        "Missing authentication",
        "Missing retrylogic",
        "Missing ratelimiting",
        "Missing authentication",
        "Missing logging",
        "Missing retrylogic",
        "Missing ratelimiting",
        "Missing authentication",
        "Missing retrylogic",
        "Missing ratelimiting",
        "Missing authentication",
        "Missing ratelimiting",
        "Missing authentication",
        "Missing ratelimiting",
        "Missing logging",
        "Missing retrylogic",
        "Missing ratelimiting",
        "Missing authentication",
        "Missing retrylogic",
        "Missing ratelimiting",
        "Missing authentication",
        "Missing retrylogic",
        "Missing ratelimiting",
        "Missing retrylogic",
        "Missing ratelimiting",
        "Missing authentication",
        "Missing logging",
        "Missing retrylogic",
        "Missing ratelimiting",
        "Missing authentication",
        "Missing documentation",
        "Missing logging",
        "Missing retrylogic",
        "Missing ratelimiting",
        "Missing authentication",
        "Missing retrylogic",
        "Missing ratelimiting",
        "Missing authentication",
        "Missing retrylogic",
        "Missing ratelimiting",
        "Missing logging",
        "Missing retrylogic",
        "Missing ratelimiting",
        "Missing authentication",
        "Missing documentation",
        "Missing logging",
        "Missing retrylogic",
        "Missing ratelimiting",
        "Missing authentication",
        "Missing documentation",
        "Missing logging",
        "Missing retrylogic",
        "Missing ratelimiting",
        "Missing authentication",
        "Missing documentation",
        "Missing ratelimiting",
        "Missing logging",
        "Missing retrylogic",
        "Missing ratelimiting",
        "Missing authentication",
        "Missing documentation",
        "Missing logging",
        "Missing retrylogic",
        "Missing ratelimiting",
        "Missing authentication",
        "Missing documentation",
        "Missing logging",
        "Missing retrylogic",
        "Missing ratelimiting",
        "Missing authentication",
        "Missing documentation",
        "Missing retrylogic",
        "Missing ratelimiting",
        "Missing authentication",
        "Missing retrylogic",
        "Missing ratelimiting",
        "Missing authentication",
        "Missing logging",
        "Missing retrylogic",
        "Missing ratelimiting",
        "Missing authentication",
        "Missing documentation",
        "Missing logging",
        "Missing retrylogic",
        "Missing ratelimiting",
        "Missing authentication",
        "Missing documentation",
        "Missing retrylogic",
        "Missing ratelimiting",
        "Missing authentication",
        "Missing ratelimiting",
        "Missing authentication",
        "Missing logging",
        "Missing retrylogic",
        "Missing ratelimiting",
        "Missing authentication",
        "Missing documentation",
        "Missing logging",
        "Missing retrylogic",
        "Missing ratelimiting",
        "Missing authentication",
        "Missing documentation",
        "Missing logging",
        "Missing retrylogic",
        "Missing ratelimiting",
        "Missing authentication",
        "Missing documentation",
        "Missing retrylogic",
        "Missing ratelimiting",
        "Missing authentication",
        "Missing logging",
        "Missing retrylogic",
        "Missing ratelimiting",
        "Missing authentication",
        "Missing retrylogic",
        "Missing ratelimiting",
        "Missing authentication",
        "Missing logging",
        "Missing retrylogic",
        "Missing ratelimiting",
        "Missing authentication",
        "Missing documentation",
        "Missing retrylogic",
        "Missing ratelimiting",
        "Missing authentication",
        "Missing retrylogic",
        "Missing ratelimiting",
        "Missing authentication",
        "Missing documentation",
        "Missing retrylogic",
        "Missing ratelimiting",
        "Missing authentication",
        "Missing retrylogic",
        "Missing ratelimiting",
        "Missing authentication",
        "Missing retrylogic",
        "Missing ratelimiting",
        "Missing authentication",
        "Missing retrylogic",
        "Missing ratelimiting",
        "Missing retrylogic",
        "Missing ratelimiting",
        "Missing authentication",
        "Missing retrylogic",
        "Missing ratelimiting",
        "Missing authentication",
        "Missing retrylogic",
        "Missing authentication",
        "Missing retrylogic",
        "Missing ratelimiting",
        "Missing authentication",
        "Missing retrylogic",
        "Missing ratelimiting",
        "Missing logging",
        "Missing retrylogic",
        "Missing ratelimiting",
        "Missing authentication",
        "Missing retrylogic",
        "Missing ratelimiting",
        "Missing authentication",
        "Missing retrylogic",
        "Missing ratelimiting",
        "Missing authentication",
        "Missing ratelimiting",
        "Missing retrylogic",
        "Missing ratelimiting",
        "Missing retrylogic",
        "Missing ratelimiting",
        "Missing authentication",
        "Missing ratelimiting",
        "Missing retrylogic",
        "Missing ratelimiting",
        "Missing logging",
        "Missing retrylogic",
        "Missing ratelimiting",
        "Missing authentication",
        "Missing logging",
        "Missing retrylogic",
        "Missing ratelimiting",
        "Missing authentication",
        "Missing retrylogic",
        "Missing ratelimiting",
        "Missing authentication",
        "Missing logging",
        "Missing retrylogic",
        "Missing ratelimiting",
        "Missing authentication",
        "Missing retrylogic",
        "Missing ratelimiting",
        "Missing authentication",
        "Missing retrylogic",
        "Missing ratelimiting",
        "Missing retrylogic",
        "Missing ratelimiting",
        "Missing logging",
        "Missing retrylogic",
        "Missing ratelimiting",
        "Missing documentation",
        "Missing ratelimiting",
        "Missing authentication",
        "Missing retrylogic",
        "Missing ratelimiting",
        "Missing authentication",
        "Missing retrylogic",
        "Missing ratelimiting",
        "Missing authentication",
        "Missing retrylogic",
        "Missing ratelimiting",
        "Missing authentication",
        "Missing logging",
        "Missing retrylogic",
        "Missing ratelimiting",
        "Missing authentication",
        "Missing logging",
        "Missing retrylogic",
        "Missing ratelimiting",
        "Missing authentication",
        "Missing ratelimiting",
        "Missing authentication",
        "Missing retrylogic",
        "Missing ratelimiting",
        "Missing authentication",
        "Add offline support",
        "Race condition protection needed"
      ],
      "fix": "Add JSDoc comments and README files"
    }
  ],
  "recommendations": [
    "Implement comprehensive error boundaries in all major components",
    "Add loading states and skeleton screens for better UX",
    "Improve accessibility with ARIA labels and semantic HTML",
    "Enhance mobile responsiveness and touch interactions",
    "Add comprehensive test coverage for critical features",
    "Implement performance optimizations with React.memo and useMemo",
    "Add proper input validation and sanitization",
    "Create offline support and network failure handling",
    "Implement proper keyboard navigation throughout",
    "Add comprehensive documentation for all components and features"
  ]
}